"use strict";(self.webpackChunkagile_docs=self.webpackChunkagile_docs||[]).push([[6380],{3905:function(n,e,t){t.d(e,{Zo:function(){return d},kt:function(){return u}});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function o(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function i(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},o=Object.keys(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(n);for(a=0;a<o.length;a++)t=o[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var l=a.createContext({}),p=function(n){var e=a.useContext(l),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},d=function(n){var e=p(n.components);return a.createElement(l.Provider,{value:e},n.children)},c={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},_=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,o=n.originalType,l=n.parentName,d=i(n,["components","mdxType","originalType","parentName"]),_=p(t),u=r,m=_["".concat(l,".").concat(u)]||_[u]||c[u]||o;return t?a.createElement(m,s(s({ref:e},d),{},{components:t})):a.createElement(m,s({ref:e},d))}));function u(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var o=t.length,s=new Array(o);s[0]=_;var i={};for(var l in e)hasOwnProperty.call(e,l)&&(i[l]=e[l]);i.originalType=n,i.mdxType="string"==typeof n?n:r,s[1]=i;for(var p=2;p<o;p++)s[p]=t[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}_.displayName="MDXCreateElement"},5510:function(n,e,t){t.r(e),t.d(e,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return p},toc:function(){return d},default:function(){return _}});var a=t(3117),r=t(102),o=(t(7294),t(3905)),s=["components"],i={id:"installation",title:"\u5b89\u88c5",sidebar_label:"\u5b89\u88c5",slug:"/packages/installation"},l=void 0,p={unversionedId:"packages/installation",id:"packages/installation",title:"\u5b89\u88c5",description:"\u56e0\u4e3a\u8d44\u6e90\u95ee\u9898\uff0c\u6545\u76f4\u63a5\u5728 Mac \u672c\u5730\u8fdb\u884c\u73af\u5883\u642d\u5efa\uff0cNeon Database \u6e90\u7801\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u5b83\u63d0\u4f9b All In One \u7684\u811a\u672c\uff0c\u4e00\u952e\u6784\u5efa\uff0c\u6211\u5728\u4e24\u4e2a Mac(M1 \u548c\u56e0\u7279\u5c14) \u90fd\u5c1d\u8bd5\u8fc7\uff0c\u6ca1\u5931\u8d25\u8fc7\u3002",source:"@site/docs/packages/Installation.md",sourceDirName:"packages",slug:"/packages/installation",permalink:"/docs/packages/installation",editUrl:"https://github.com/xmidtao/documentation/tree/main/docs/packages/Installation.md",tags:[],version:"current",lastUpdatedAt:1692714783,formattedLastUpdatedAt:"8/22/2023",frontMatter:{id:"installation",title:"\u5b89\u88c5",sidebar_label:"\u5b89\u88c5",slug:"/packages/installation"},sidebar:"docs",previous:{title:"\u7b80\u4ecb",permalink:"/docs/packages"},next:{title:"Introduction",permalink:"/docs/core"}},d=[{value:"\u23f3 \u7f16\u8bd1\u5b89\u88c5",id:"-\u7f16\u8bd1\u5b89\u88c5",children:[{value:"\u6784\u5efa\u4e8e OSX",id:"\u6784\u5efa\u4e8e-osx",children:[],level:3},{value:"\u4f9d\u8d56\u5b89\u88c5\u63d0\u793a",id:"\u4f9d\u8d56\u5b89\u88c5\u63d0\u793a",children:[],level:3},{value:"\u8fd0\u884c Neon",id:"\u8fd0\u884c-neon",children:[],level:3}],level:2},{value:"\ud83e\udd13 TPCH",id:"-tpch",children:[{value:"DBGEN",id:"dbgen",children:[],level:3},{value:"SQL",id:"sql",children:[],level:3}],level:2},{value:"\ud83d\udc1e GDB/LLDB \u8c03\u8bd5",id:"-gdblldb-\u8c03\u8bd5",children:[],level:2},{value:"\ud83d\udcc1 \u6817\u5b50",id:"-\u6817\u5b50",children:[{value:"In \u67e5\u8be2",id:"in-\u67e5\u8be2",children:[],level:3},{value:"<code>=Any</code> \u67e5\u8be2",id:"any-\u67e5\u8be2",children:[],level:3},{value:"Exists \u67e5\u8be2",id:"exists-\u67e5\u8be2",children:[],level:3},{value:"\u5176\u4ed6",id:"\u5176\u4ed6",children:[],level:3},{value:"\u5e76\u884c\u67e5\u8be2",id:"\u5e76\u884c\u67e5\u8be2",children:[],level:3}],level:2},{value:"\ud83d\udcdd \u603b\u7ed3",id:"-\u603b\u7ed3",children:[],level:2},{value:"\ud83d\udcc4 \u53c2\u8003",id:"-\u53c2\u8003",children:[],level:2}],c={toc:d};function _(n){var e=n.components,t=(0,r.Z)(n,s);return(0,o.kt)("wrapper",(0,a.Z)({},c,t,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"\u56e0\u4e3a\u8d44\u6e90\u95ee\u9898\uff0c\u6545\u76f4\u63a5\u5728 Mac \u672c\u5730\u8fdb\u884c\u73af\u5883\u642d\u5efa\uff0cNeon Database \u6e90\u7801\u4e0b\u8f7d\u5230\u672c\u5730\uff0c\u5b83\u63d0\u4f9b All In One \u7684\u811a\u672c\uff0c\u4e00\u952e\u6784\u5efa\uff0c\u6211\u5728\u4e24\u4e2a Mac(M1 \u548c\u56e0\u7279\u5c14) \u90fd\u5c1d\u8bd5\u8fc7\uff0c\u6ca1\u5931\u8d25\u8fc7\u3002"),(0,o.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},"\u2139\ufe0f"),"note")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"\u52a0\u901f\u7f16\u8bd1\uff0c\u62d2\u7edd\u7b49\u5f85\uff0c\u5efa\u8bae\u6709\u6761\u4ef6\u540c\u5b66\uff0c\u51c6\u5907\u9ad8\u914d\u4e00\u70b9\u7684\u7b14\u8bb0\u672c\u7535\u8111\u6216\u53f0\u5f0f\u673a\uff0c\u4e00\u822c\u9996\u9009\u9ad8\u914d MacBook Pro \u6216\u7ec4\u88c5\u9ad8\u914d\u53f0\u5f0f\u673a\u4e5f\u53ef\uff0c\u9009\u4e00\u4e2a Linux/Unix \u64cd\u4f5c\u7cfb\u7edf\u914d\u5408\u98df\u7528\u3002"))),(0,o.kt)("h2",{id:"-\u7f16\u8bd1\u5b89\u88c5"},"\u23f3 \u7f16\u8bd1\u5b89\u88c5"),(0,o.kt)("p",null,"\u64cd\u4f5c\u7cfb\u7edf\uff1a",(0,o.kt)("inlineCode",{parentName:"p"},"Macos12.6 on x86_64")),(0,o.kt)("p",null,"\u786c\u4ef6\u73af\u5883\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},"Processor Name: Dual-Core Intel Core i5\nProcessor Speed:  2.9 GHz\nNumber of Processors: 1\nTotal Number of Cores:    2\nL2 Cache (per Core):  256 KB\nL3 Cache: 3 MB\nMemory:   8 GB\n")),(0,o.kt)("p",null,"OSX \u4e00\u952e\u811a\u672c\u7f16\u8bd1\uff0c\u5b83\u4f1a\u81ea\u52a8\u5904\u7406\u4f9d\u8d56\u7b49\u95ee\u9898\uff0c\u9996\u6b21\u7f16\u8bd1\u9700\u8981\u4e9b\u65f6\u95f4\u3002"),(0,o.kt)("h3",{id:"\u6784\u5efa\u4e8e-osx"},"\u6784\u5efa\u4e8e OSX"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u6784\u5efa neon \u548c patched postgres")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'# Note: The path to the neon sources can not contain a space.\n\ngit clone --recursive https://github.com/neondatabase/neon.git\ncd neon\n\n# The preferred and default is to make a debug build. This will create a\n# demonstrably slower build than a release build. For a release build,\n# use "BUILD_TYPE=release make -j`sysctl -n hw.logicalcpu` -s"\n# Remove -s for the verbose build log\n\nmake -j`sysctl -n hw.logicalcpu` -s\n')),(0,o.kt)("h3",{id:"\u4f9d\u8d56\u5b89\u88c5\u63d0\u793a"},"\u4f9d\u8d56\u5b89\u88c5\u63d0\u793a"),(0,o.kt)("p",null,"To run the ",(0,o.kt)("inlineCode",{parentName:"p"},"psql")," client, install the ",(0,o.kt)("inlineCode",{parentName:"p"},"postgresql-client")," package or modify ",(0,o.kt)("inlineCode",{parentName:"p"},"PATH")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"LD_LIBRARY_PATH")," to include ",(0,o.kt)("inlineCode",{parentName:"p"},"pg_install/bin")," and ",(0,o.kt)("inlineCode",{parentName:"p"},"pg_install/lib"),", respectively."),(0,o.kt)("p",null,"To run the integration tests or Python scripts (not required to use the code), install\nPython (3.9 or higher), and install python3 packages using ",(0,o.kt)("inlineCode",{parentName:"p"},"./scripts/pysync")," (requires ",(0,o.kt)("a",{parentName:"p",href:"https://python-poetry.org/"},"poetry>=1.3"),") in the project directory."),(0,o.kt)("h3",{id:"\u8fd0\u884c-neon"},"\u8fd0\u884c Neon"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Start pageserver and postgres on top of it (should be called from repo root):")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"# Create repository in .neon with proper paths to binaries and data\n# Later that would be responsibility of a package install script\n> cargo neon init\nInitializing pageserver node 1 at '127.0.0.1:64000' in \".neon\"\n\n# start pageserver, safekeeper, and broker for their intercommunication\n> cargo neon start\nStarting neon broker at 127.0.0.1:50051.\nstorage_broker started, pid: 2918372\nStarting pageserver node 1 at '127.0.0.1:64000' in \".neon\".\npageserver started, pid: 2918386\nStarting safekeeper at '127.0.0.1:5454' in '.neon/safekeepers/sk1'.\nsafekeeper 1 started, pid: 2918437\n\n# create initial tenant and use it as a default for every future neon_local invocation\n> cargo neon tenant create --set-default\ntenant 9ef87a5bf0d92544f6fafeeb3239695c successfully created on the pageserver\nCreated an initial timeline 'de200bd42b49cc1814412c7e592dd6e9' at Lsn 0/16B5A50 for tenant: 9ef87a5bf0d92544f6fafeeb3239695c\nSetting tenant 9ef87a5bf0d92544f6fafeeb3239695c as a default one\n\n# start postgres compute node\n> cargo neon endpoint start main\nStarting new endpoint main (PostgreSQL v14) on timeline de200bd42b49cc1814412c7e592dd6e9 ...\nStarting postgres at 'postgresql://cloud_admin@127.0.0.1:55432/postgres'\n\n# check list of running postgres instances\n> cargo neon endpoint list\n ENDPOINT  ADDRESS          TIMELINE                          BRANCH NAME  LSN        STATUS\n main      127.0.0.1:55432  de200bd42b49cc1814412c7e592dd6e9  main         0/16B5BA8  running\n")),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"Now, it is possible to connect to postgres and run some queries:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-text"},"> psql -p55432 -h 127.0.0.1 -U cloud_admin postgres\npostgres=# CREATE TABLE t(key int primary key, value text);\nCREATE TABLE\npostgres=# insert into t values(1,1);\nINSERT 0 1\npostgres=# select * from t;\n key | value\n-----+-------\n   1 | 1\n(1 row)\n")),(0,o.kt)("ol",{start:3},(0,o.kt)("li",{parentName:"ol"},"And create branches and run postgres on them:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"# create branch named migration_check\n> cargo neon timeline branch --branch-name migration_check\nCreated timeline 'b3b863fa45fa9e57e615f9f2d944e601' at Lsn 0/16F9A00 for tenant: 9ef87a5bf0d92544f6fafeeb3239695c. Ancestor timeline: 'main'\n\n# check branches tree\n> cargo neon timeline list\n(L) main [de200bd42b49cc1814412c7e592dd6e9]\n(L) \u2517\u2501 @0/16F9A00: migration_check [b3b863fa45fa9e57e615f9f2d944e601]\n\n# start postgres on that branch\n> cargo neon endpoint start migration_check --branch-name migration_check\nStarting new endpoint migration_check (PostgreSQL v14) on timeline b3b863fa45fa9e57e615f9f2d944e601 ...\nStarting postgres at 'postgresql://cloud_admin@127.0.0.1:55434/postgres'\n\n# check the new list of running postgres instances\n> cargo neon endpoint list\n ENDPOINT         ADDRESS          TIMELINE                          BRANCH NAME      LSN        STATUS\n main             127.0.0.1:55432  de200bd42b49cc1814412c7e592dd6e9  main             0/16F9A38  running\n migration_check  127.0.0.1:55434  b3b863fa45fa9e57e615f9f2d944e601  migration_check  0/16F9A70  running\n\n# this new postgres instance will have all the data from 'main' postgres,\n# but all modifications would not affect data in original postgres\n> psql -p55434 -h 127.0.0.1 -U cloud_admin postgres\npostgres=# select * from t;\n key | value\n-----+-------\n   1 | 1\n(1 row)\n\npostgres=# insert into t values(2,2);\nINSERT 0 1\n\n# check that the new change doesn't affect the 'main' postgres\n> psql -p55432 -h 127.0.0.1 -U cloud_admin postgres\npostgres=# select * from t;\n key | value\n-----+-------\n   1 | 1\n(1 row)\n")),(0,o.kt)("ol",{start:4},(0,o.kt)("li",{parentName:"ol"},"If you want to run tests afterward (see below), you must stop all the running of the pageserver, safekeeper, and postgres instances\nyou have just started. You can terminate them all with one command:")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sh"},"> cargo neon stop\n")),(0,o.kt)("h2",{id:"-tpch"},"\ud83e\udd13 TPCH"),(0,o.kt)("p",null,"Debug \u65b9\u4fbf\u7814\u7a76\u6267\u884c\u8ba1\u5212\u4ee5\u53ca\u590d\u6742 SQL \u7684\u5904\u7406\u6d41\u7a0b\uff0c\u76f4\u63a5\u5728 MYSQL \u4e2d\u5229\u7528 TPCH \u5de5\u5177\uff0c\u751f\u6210\u51e0\u5f20\u8868\uff0c\u5229\u7528 TPCH \u63d0\u4f9b\u7684 SQL \u6267\u884c\u7814\u7a76 SQL \u4f18\u5316\u5668\u7b49\u3002"),(0,o.kt)("p",null,"\u8bf7\u53c2\u8003 ",(0,o.kt)("a",{parentName:"p",href:"../mysql/basic/installation#-tpch"},"MySQL \u5b89\u88c5"),"\uff0c\u81ea\u884c\u51c6\u5907 PG TPCH \u5e93\u548c\u8868\u6570\u636e\u3002"),(0,o.kt)("h3",{id:"dbgen"},"DBGEN"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u751f\u6210\u6570\u636e")),(0,o.kt)("p",null,"tpch \u811a\u672c\u751f\u6210\u7684\u6570\u636e\u65e0\u6cd5\u76f4\u63a5\u5bfc\u5165 PG\uff08\u62a5\u9519\uff0c\u683c\u5f0f\u4e0d\u5bf9\uff09\uff0c\u9700\u8981\u7f16\u8bd1\u524d\u589e\u52a0\u5982\u4e0b\u914d\u7f6e\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"echo \"#define EOL_HANDLING 1\" >> config.h # \u6d88\u9664\u751f\u6210\u6570\u636e\u672b\u5c3e\u7684'|'\nmake\n\n./dbgen -s 0.01 # \u672c\u5730\u6d4b\u8bd5\u6570\u636e\u96c6\uff0c\u5c3d\u91cf\u5c0f\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u52a0\u8f7d\u6570\u636e")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"\\copy nation from '~/data/codelabs/tpch/tpch-dbgen-pg/data/nation.tbl' DELIMITER '|';\n\\copy region from '~/data/codelabs/tpch/tpch-dbgen-pg/data/region.tbl' DELIMITER '|';\n\\copy customer from '~/data/codelabs/tpch/tpch-dbgen-pg/data/customer.tbl' DELIMITER '|';\n\\copy lineitem from '~/data/codelabs/tpch/tpch-dbgen-pg/data/lineitem.tbl' DELIMITER '|';\n\\copy orders from '~/data/codelabs/tpch/tpch-dbgen-pg/data/orders.tbl' DELIMITER '|';\n\\copy partsupp from '~/data/codelabs/tpch/tpch-dbgen-pg/data/partsupp.tbl' DELIMITER '|';\n\\copy part from '~/data/codelabs/tpch/tpch-dbgen-pg/data/part.tbl' DELIMITER '|';\n\\copy supplier from '~/data/codelabs/tpch/tpch-dbgen-pg/data/supplier.tbl' DELIMITER '|';\n")),(0,o.kt)("h3",{id:"sql"},"SQL"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"--\u521b\u5efa\u5411\u91cf\u5316\u8ba1\u7b97\u5f15\u64ceLaser\u63d2\u4ef6\ncreate extension if not exists laser;\n\n-- Q1\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    l_returnflag,\n    l_linestatus,\n    sum(l_quantity) as sum_qty,\n    sum(l_extendedprice) as sum_base_price,\n    sum(l_extendedprice * (1 - l_discount)) as sum_disc_price,\n    sum(l_extendedprice * (1 - l_discount) * (1 + l_tax)) as sum_charge,\n    avg(l_quantity) as avg_qty,\n    avg(l_extendedprice) as avg_price,\n    avg(l_discount) as avg_disc,\n    count(*) as count_order\nfrom\n    lineitem\nwhere\n    l_shipdate <= date '1998-12-01' - interval '93 day'\ngroup by\n    l_returnflag,\n    l_linestatus\norder by\n    l_returnflag,\n    l_linestatus;\n    \n-- Q2\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    s_acctbal,\n    s_name,\n    n_name,\n    p_partkey,\n    p_mfgr,\n    s_address,\n    s_phone,\n    s_comment\nfrom\n    part,\n    supplier,\n    partsupp,\n    nation,\n    region\nwhere\n    p_partkey = ps_partkey\n    and s_suppkey = ps_suppkey\n    and p_size = 23\n    and p_type like '%STEEL'\n    and s_nationkey = n_nationkey\n    and n_regionkey = r_regionkey\n    and r_name = 'EUROPE'\n    and ps_supplycost = (\n        select\n            min(ps_supplycost)\n        from\n            partsupp,\n            supplier,\n            nation,\n            region\n        where\n            p_partkey = ps_partkey\n            and s_suppkey = ps_suppkey\n            and s_nationkey = n_nationkey\n            and n_regionkey = r_regionkey\n            and r_name = 'EUROPE'\n    )\norder by\n    s_acctbal desc,\n    n_name,\n    s_name,\n    p_partkey\nlimit 100;\n\n-- Q3\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    l_orderkey,\n    sum(l_extendedprice * (1 - l_discount)) as revenue,\n    o_orderdate,\n    o_shippriority\nfrom\n    customer,\n    orders,\n    lineitem\nwhere\n    c_mktsegment = 'MACHINERY'\n    and c_custkey = o_custkey\n    and l_orderkey = o_orderkey\n    and o_orderdate < date '1995-03-24'\n    and l_shipdate > date '1995-03-24'\ngroup by\n    l_orderkey,\n    o_orderdate,\n    o_shippriority\norder by\n    revenue desc,\n    o_orderdate\nlimit 10;\n\n-- Q4\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    o_orderpriority,\n    count(*) as order_count\nfrom\n    orders\nwhere\n    o_orderdate >= date '1996-08-01'\n    and o_orderdate < date '1996-08-01' + interval '3' month\n    and exists (\n        select\n            *\n        from\n            lineitem\n        where\n            l_orderkey = o_orderkey\n            and l_commitdate < l_receiptdate\n    )\ngroup by\n    o_orderpriority\norder by\n    o_orderpriority;\n    \n-- Q5\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nselect\n    n_name,\n    sum(l_extendedprice * (1 - l_discount)) as revenue\nfrom\n    customer,\n    orders,\n    lineitem,\n    supplier,\n    nation,\n    region\nwhere\n    c_custkey = o_custkey\n    and l_orderkey = o_orderkey\n    and l_suppkey = s_suppkey\n    and c_nationkey = s_nationkey\n    and s_nationkey = n_nationkey\n    and n_regionkey = r_regionkey\n    and r_name = 'MIDDLE EAST'\n    and o_orderdate >= date '1994-01-01'\n    and o_orderdate < date '1994-01-01' + interval '1' year\ngroup by\n    n_name\norder by\n    revenue desc;\n    \n-- Q6\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    sum(l_extendedprice * l_discount) as revenue\nfrom\n    lineitem\nwhere\n    l_shipdate >= date '1994-01-01'\n    and l_shipdate < date '1994-01-01' + interval '1' year\n    and l_discount between 0.06 - 0.01 and 0.06 + 0.01\n    and l_quantity < 24;\n    \n-- Q7\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    supp_nation,\n    cust_nation,\n    l_year,\n    sum(volume) as revenue\nfrom\n    (\n        select\n            n1.n_name as supp_nation,\n            n2.n_name as cust_nation,\n            extract(year from l_shipdate) as l_year,\n            l_extendedprice * (1 - l_discount) as volume\n        from\n            supplier,\n            lineitem,\n            orders,\n            customer,\n            nation n1,\n            nation n2\n        where\n            s_suppkey = l_suppkey\n            and o_orderkey = l_orderkey\n            and c_custkey = o_custkey\n            and s_nationkey = n1.n_nationkey\n            and c_nationkey = n2.n_nationkey\n            and (\n                (n1.n_name = 'JORDAN' and n2.n_name = 'INDONESIA')\n                or (n1.n_name = 'INDONESIA' and n2.n_name = 'JORDAN')\n            )\n            and l_shipdate between date '1995-01-01' and date '1996-12-31'\n    ) as shipping\ngroup by\n    supp_nation,\n    cust_nation,\n    l_year\norder by\n    supp_nation,\n    cust_nation,\n    l_year;\n\n-- Q8\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    o_year,\n    sum(case\n        when nation = 'INDONESIA' then volume\n        else 0\n    end) / sum(volume) as mkt_share\nfrom\n    (\n        select\n            extract(year from o_orderdate) as o_year,\n            l_extendedprice * (1 - l_discount) as volume,\n            n2.n_name as nation\n        from\n            part,\n            supplier,\n            lineitem,\n            orders,\n            customer,\n            nation n1,\n            nation n2,\n            region\n        where\n            p_partkey = l_partkey\n            and s_suppkey = l_suppkey\n            and l_orderkey = o_orderkey\n            and o_custkey = c_custkey\n            and c_nationkey = n1.n_nationkey\n            and n1.n_regionkey = r_regionkey\n            and r_name = 'ASIA'\n            and s_nationkey = n2.n_nationkey\n            and o_orderdate between date '1995-01-01' and date '1996-12-31'\n            and p_type = 'STANDARD BRUSHED BRASS'\n    ) as all_nations\ngroup by\n    o_year\norder by\n    o_year;\n    \n-- Q9\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    nation,\n    o_year,\n    sum(amount) as sum_profit\nfrom\n    (\n        select\n            n_name as nation,\n            extract(year from o_orderdate) as o_year,\n            l_extendedprice * (1 - l_discount) - ps_supplycost * l_quantity as amount\n        from\n            part,\n            supplier,\n            lineitem,\n            partsupp,\n            orders,\n            nation\n        where\n            s_suppkey = l_suppkey\n            and ps_suppkey = l_suppkey\n            and ps_partkey = l_partkey\n            and p_partkey = l_partkey\n            and o_orderkey = l_orderkey\n            and s_nationkey = n_nationkey\n            and p_name like '%chartreuse%'\n    ) as profit\ngroup by\n    nation,\n    o_year\norder by\n    nation,\n    o_year desc;\n    \n-- Q10\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    c_custkey,\n    c_name,\n    sum(l_extendedprice * (1 - l_discount)) as revenue,\n    c_acctbal,\n    n_name,\n    c_address,\n    c_phone,\n    c_comment\nfrom\n    customer,\n    orders,\n    lineitem,\n    nation\nwhere\n    c_custkey = o_custkey\n    and l_orderkey = o_orderkey\n    and o_orderdate >= date '1994-08-01'\n    and o_orderdate < date '1994-08-01' + interval '3' month\n    and l_returnflag = 'R'\n    and c_nationkey = n_nationkey\ngroup by\n    c_custkey,\n    c_name,\n    c_acctbal,\n    c_phone,\n    n_name,\n    c_address,\n    c_comment\norder by\n    revenue desc\nlimit 20;\n\n-- Q11\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    ps_partkey,\n    sum(ps_supplycost * ps_availqty) as value\nfrom\n    partsupp,\n    supplier,\n    nation\nwhere\n    ps_suppkey = s_suppkey\n    and s_nationkey = n_nationkey\n    and n_name = 'INDONESIA'\ngroup by\n    ps_partkey having\n        sum(ps_supplycost * ps_availqty) > (\n            select\n                sum(ps_supplycost * ps_availqty) * 0.0001000000\n            from\n                partsupp,\n                supplier,\n                nation\n            where\n                ps_suppkey = s_suppkey\n                and s_nationkey = n_nationkey\n                and n_name = 'INDONESIA'\n        )\norder by\n    value desc;\n\n-- Q12\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    l_shipmode,\n    sum(case\n        when o_orderpriority = '1-URGENT'\n            or o_orderpriority = '2-HIGH'\n            then 1\n        else 0\n    end) as high_line_count,\n    sum(case\n        when o_orderpriority <> '1-URGENT'\n            and o_orderpriority <> '2-HIGH'\n            then 1\n        else 0\n    end) as low_line_count\nfrom\n    orders,\n    lineitem\nwhere\n    o_orderkey = l_orderkey\n    and l_shipmode in ('REG AIR', 'TRUCK')\n    and l_commitdate < l_receiptdate\n    and l_shipdate < l_commitdate\n    and l_receiptdate >= date '1994-01-01'\n    and l_receiptdate < date '1994-01-01' + interval '1' year\ngroup by\n    l_shipmode\norder by\n    l_shipmode;\n    \n-- Q13\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    c_count,\n    count(*) as custdist\nfrom\n    (\n        select\n            c_custkey,\n            count(o_orderkey)\n        from\n            customer left outer join orders on\n                c_custkey = o_custkey\n                and o_comment not like '%pending%requests%'\n        group by\n            c_custkey\n    ) as c_orders (c_custkey, c_count)\ngroup by\n    c_count\norder by\n    custdist desc,\n    c_count desc;\n    \n-- Q14\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    100.00 * sum(case\n        when p_type like 'PROMO%'\n            then l_extendedprice * (1 - l_discount)\n        else 0\n    end) / sum(l_extendedprice * (1 - l_discount)) as promo_revenue\nfrom\n    lineitem,\n    part\nwhere\n    l_partkey = p_partkey\n    and l_shipdate >= date '1994-11-01'\n    and l_shipdate < date '1994-11-01' + interval '1' month;\n    \n-- Q15\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\ncreate view revenue0 (supplier_no, total_revenue) as\n    select\n        l_suppkey,\n        sum(l_extendedprice * (1 - l_discount))\n    from\n        lineitem\n    where\n        l_shipdate >= date '1997-10-01'\n        and l_shipdate < date '1997-10-01' + interval '3' month\n    group by\n        l_suppkey;\nselect\n    s_suppkey,\n    s_name,\n    s_address,\n    s_phone,\n    total_revenue\nfrom\n    supplier,\n    revenue0\nwhere\n    s_suppkey = supplier_no\n    and total_revenue = (\n        select\n            max(total_revenue)\n        from\n            revenue0\n    )\norder by\n    s_suppkey;\ndrop view revenue0;\n\n-- Q16\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    p_brand,\n    p_type,\n    p_size,\n    count(distinct ps_suppkey) as supplier_cnt\nfrom\n    partsupp,\n    part\nwhere\n    p_partkey = ps_partkey\n    and p_brand <> 'Brand#44'\n    and p_type not like 'SMALL BURNISHED%'\n    and p_size in (36, 27, 34, 45, 11, 6, 25, 16)\n    and ps_suppkey not in (\n        select\n            s_suppkey\n        from\n            supplier\n        where\n            s_comment like '%Customer%Complaints%'\n    )\ngroup by\n    p_brand,\n    p_type,\n    p_size\norder by\n    supplier_cnt desc,\n    p_brand,\n    p_type,\n    p_size;\n\n-- Q17\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    sum(l_extendedprice) / 7.0 as avg_yearly\nfrom\n    lineitem,\n    part\nwhere\n    p_partkey = l_partkey\n    and p_brand = 'Brand#42'\n    and p_container = 'JUMBO PACK'\n    and l_quantity < (\n        select\n            0.2 * avg(l_quantity)\n        from\n            lineitem\n        where\n            l_partkey = p_partkey\n    );\n    \n-- Q18\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    c_name,\n    c_custkey,\n    o_orderkey,\n    o_orderdate,\n    o_totalprice,\n    sum(l_quantity)\nfrom\n    customer,\n    orders,\n    lineitem\nwhere\n    o_orderkey in (\n        select\n            l_orderkey\n        from\n            lineitem\n        group by\n            l_orderkey having\n                sum(l_quantity) > 312\n    )\n    and c_custkey = o_custkey\n    and o_orderkey = l_orderkey\ngroup by\n    c_name,\n    c_custkey,\n    o_orderkey,\n    o_orderdate,\n    o_totalprice\norder by\n    o_totalprice desc,\n    o_orderdate\nlimit 100;\n\n-- Q19\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    sum(l_extendedprice* (1 - l_discount)) as revenue\nfrom\n    lineitem,\n    part\nwhere\n    (\n        p_partkey = l_partkey\n        and p_brand = 'Brand#43'\n        and p_container in ('SM CASE', 'SM BOX', 'SM PACK', 'SM PKG')\n        and l_quantity >= 5 and l_quantity <= 5 + 10\n        and p_size between 1 and 5\n        and l_shipmode in ('AIR', 'AIR REG')\n        and l_shipinstruct = 'DELIVER IN PERSON'\n    )\n    or\n    (\n        p_partkey = l_partkey\n        and p_brand = 'Brand#45'\n        and p_container in ('MED BAG', 'MED BOX', 'MED PKG', 'MED PACK')\n        and l_quantity >= 12 and l_quantity <= 12 + 10\n        and p_size between 1 and 10\n        and l_shipmode in ('AIR', 'AIR REG')\n        and l_shipinstruct = 'DELIVER IN PERSON'\n    )\n    or\n    (\n        p_partkey = l_partkey\n        and p_brand = 'Brand#11'\n        and p_container in ('LG CASE', 'LG BOX', 'LG PACK', 'LG PKG')\n        and l_quantity >= 24 and l_quantity <= 24 + 10\n        and p_size between 1 and 15\n        and l_shipmode in ('AIR', 'AIR REG')\n        and l_shipinstruct = 'DELIVER IN PERSON'\n    );\n\n-- Q20\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    s_name,\n    s_address\nfrom\n    supplier,\n    nation\nwhere\n    s_suppkey in (\n        select\n            ps_suppkey\n        from\n            partsupp\n        where\n            ps_partkey in (\n                select\n                    p_partkey\n                from\n                    part\n                where\n                    p_name like 'magenta%'\n            )\n            and ps_availqty > (\n                select\n                    0.5 * sum(l_quantity)\n                from\n                    lineitem\n                where\n                    l_partkey = ps_partkey\n                    and l_suppkey = ps_suppkey\n                    and l_shipdate >= date '1996-01-01'\n                    and l_shipdate < date '1996-01-01' + interval '1' year\n            )\n    )\n    and s_nationkey = n_nationkey\n    and n_name = 'RUSSIA'\norder by\n    s_name;\n\n-- Q21\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n    s_name,\n    count(*) as numwait\nfrom\n    supplier,\n    lineitem l1,\n    orders,\n    nation\nwhere\n    s_suppkey = l1.l_suppkey\n    and o_orderkey = l1.l_orderkey\n    and o_orderstatus = 'F'\n    and l1.l_receiptdate > l1.l_commitdate\n    and exists (\n        select\n            *\n        from\n            lineitem l2\n        where\n            l2.l_orderkey = l1.l_orderkey\n            and l2.l_suppkey <> l1.l_suppkey\n    )\n    and not exists (\n        select\n            *\n        from\n            lineitem l3\n        where\n            l3.l_orderkey = l1.l_orderkey\n            and l3.l_suppkey <> l1.l_suppkey\n            and l3.l_receiptdate > l3.l_commitdate\n    )\n    and s_nationkey = n_nationkey\n    and n_name = 'MOZAMBIQUE'\ngroup by\n    s_name\norder by\n    numwait desc,\n    s_name\nlimit 100;\n\n-- Q22\n-- \u5f00\u542f\u5411\u91cf\u52a0\u901f\u5f15\u64ce\uff0c\u5e76\u8bbe\u7f6e\u5f00\u5173\u53d8\u91cf\u4e3aon\nset laser.enable = on;\nselect\n        cntrycode,\n        count(*) as numcust,\n        sum(c_acctbal) as totacctbal\nfrom\n        (\n                select\n                        substring(c_phone from 1 for 2) as cntrycode,\n                        c_acctbal\n                from\n                        customer\n                where\n                        substring(c_phone from 1 for 2) in\n                                ('13', '31', '23', '29', '30', '18', '17')\n                        and c_acctbal > (\n                                select\n                                        avg(c_acctbal)\n                                from\n                                        customer\n                                where\n                                        c_acctbal > 0.00\n                                        and substring(c_phone from 1 for 2) in\n                                                ('13', '31', '23', '29', '30', '18', '17')\n                        )\n                        and not exists (\n                                select\n                                        *\n                                from\n                                        orders\n                                where\n                                        o_custkey = c_custkey\n                        )\n        ) as custsale\ngroup by\n        cntrycode\norder by\n        cntrycode;\n")),(0,o.kt)("h2",{id:"-gdblldb-\u8c03\u8bd5"},"\ud83d\udc1e GDB/LLDB \u8c03\u8bd5"),(0,o.kt)("p",null,"\u6211\u4f7f\u7528\u7684\u662f MAC \u7cfb\u7edf\uff0c\u4e00\u822c\u90fd\u4f7f\u7528 LLDB \u8fdb\u884c\u8c03\u8bd5\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-shell"},"$ lldb\n(lldb) b list\nBreakpoint 1: no locations (pending).\n\n(lldb) attach -p 38593\n\n(lldb) b exec_simple_query # pg \u6267\u884c sql \u5165\u53e3\u51fd\u6570\n\n(lldb) bt\n")),(0,o.kt)("p",null,"\u5982\u679c\u5bf9 PG \u6e90\u7801\u4e0d\u719f\u6089\uff0c\u5efa\u8bae\u4ece PG \u7684 SQL \u89e3\u6790\u5165\u53e3\u5f00\u59cb\u8fdb\u884c Debug\uff0c\u7ed3\u5408\u6e90\u7801\u89c2\u5bdf\u8c03\u7528\u94fe\u8def\uff0c\u4e5f\u53ef\u76f4\u63a5\u7528 Clion\u3001VSCode \u7b49\u5de5\u5177\u76f4\u63a5\u8fdb\u884c Debug\uff0c\u7f51\u4e0a\u6559\u7a0b\u5f88\u591a\u5c31\u4e0d\u5728\u8d58\u8ff0\u3002"),(0,o.kt)("h2",{id:"-\u6817\u5b50"},"\ud83d\udcc1 \u6817\u5b50"),(0,o.kt)("p",null,"\u5047\u8bbe\u6211\u4eec\u60f3\u7814\u7a76\u4e00\u4e0b PG \u5bf9\u4e8e ",(0,o.kt)("inlineCode",{parentName:"p"},"In/=Any/Exists")," \u67e5\u8be2\u6267\u884c\u8ba1\u5212\u4f1a\u5982\u4f55\u6539\u5199\u3002"),(0,o.kt)("h3",{id:"in-\u67e5\u8be2"},"In \u67e5\u8be2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"tpch=# explain select * from nation where n_regionkey in (select r_regionkey from region);\n                             QUERY PLAN\n---------------------------------------------------------------------\n Hash Join  (cost=13.82..25.98 rows=170 width=434)\n   Hash Cond: (nation.n_regionkey = region.r_regionkey)\n   ->  Seq Scan on nation  (cost=0.00..11.70 rows=170 width=434)\n   ->  Hash  (cost=11.70..11.70 rows=170 width=4)\n         ->  Seq Scan on region  (cost=0.00..11.70 rows=170 width=4)\n(5 rows)\n\n-- PG \u67e5\u8be2\u8ba1\u5212\ntpch=# explain analyze select * from nation where n_regionkey in (select r_regionkey from region);\n                                                  QUERY PLAN\n---------------------------------------------------------------------------------------------------------------\n Hash Join  (cost=13.82..25.98 rows=170 width=434) (actual time=0.037..0.057 rows=25 loops=1)\n   Hash Cond: (nation.n_regionkey = region.r_regionkey)\n   ->  Seq Scan on nation  (cost=0.00..11.70 rows=170 width=434) (actual time=0.015..0.019 rows=25 loops=1)\n   ->  Hash  (cost=11.70..11.70 rows=170 width=4) (actual time=0.013..0.013 rows=5 loops=1)\n         Buckets: 1024  Batches: 1  Memory Usage: 9kB\n         ->  Seq Scan on region  (cost=0.00..11.70 rows=170 width=4) (actual time=0.005..0.007 rows=5 loops=1)\n Planning Time: 0.179 ms\n Execution Time: 0.102 ms\n(8 rows)\n\n-- mysql \u67e5\u8be2\u8ba1\u5212\nmysql> explain analyze select * from nation where n_regionkey in (select r_regionkey from region)\\G;\n*************************** 1. row ***************************\nEXPLAIN: -> Nested loop inner join  (cost=11.5 rows=25) (actual time=1.07..2.7 rows=25 loops=1)\n    -> Table scan on nation  (cost=2.75 rows=25) (actual time=0.957..1.14 rows=25 loops=1)\n    -> Single-row covering index lookup on region using PRIMARY (R_REGIONKEY=nation.N_REGIONKEY)  (cost=0.254 rows=1) (actual time=0.0612..0.0613 rows=1 loops=25)\n\n1 row in set (0.01 sec)\n")),(0,o.kt)("h3",{id:"any-\u67e5\u8be2"},(0,o.kt)("inlineCode",{parentName:"h3"},"=Any")," \u67e5\u8be2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"tpch=# explain select * from nation where n_regionkey = (select distinct r_regionkey from region);\n                              QUERY PLAN\n-----------------------------------------------------------------------\n Seq Scan on nation  (cost=13.82..25.95 rows=1 width=434)\n   Filter: (n_regionkey = $0)\n   InitPlan 1 (returns $0)\n     ->  HashAggregate  (cost=12.12..13.82 rows=170 width=4)\n           Group Key: region.r_regionkey\n           ->  Seq Scan on region  (cost=0.00..11.70 rows=170 width=4)\n(6 rows)\n")),(0,o.kt)("h3",{id:"exists-\u67e5\u8be2"},"Exists \u67e5\u8be2"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"tpch=# explain select * from nation where exists (select 1 from region where nation.n_regionkey = region.r_regionkey);\n                             QUERY PLAN\n---------------------------------------------------------------------\n Hash Join  (cost=13.82..25.98 rows=170 width=434)\n   Hash Cond: (nation.n_regionkey = region.r_regionkey)\n   ->  Seq Scan on nation  (cost=0.00..11.70 rows=170 width=434)\n   ->  Hash  (cost=11.70..11.70 rows=170 width=4)\n         ->  Seq Scan on region  (cost=0.00..11.70 rows=170 width=4)\n(5 rows)\n")),(0,o.kt)("h3",{id:"\u5176\u4ed6"},"\u5176\u4ed6"),(0,o.kt)("p",null,"1=0\uff0c\u4f18\u5316\u540e\u76f4\u63a5\u8fd4\u56de\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"tpch=# EXPLAIN SELECT * FROM region WHERE 1=0;\n                QUERY PLAN\n------------------------------------------\n Result  (cost=0.00..0.00 rows=0 width=0)\n   One-Time Filter: false\n(2 rows)\n\ntpch=# EXPLAIN SELECT * FROM region WHERE 1=1 Limit 10;\n                           QUERY PLAN\n-----------------------------------------------------------------\n Limit  (cost=0.00..0.69 rows=10 width=430)\n   ->  Seq Scan on region  (cost=0.00..11.70 rows=170 width=430)\n(2 rows)\n\n\ntpch=# EXPLAIN SELECT * FROM region WHERE 1=1 and r_name = 'a' and r_comment = 'xxx' Limit 10;\n                                   QUERY PLAN\n--------------------------------------------------------------------------------\n Limit  (cost=0.00..12.55 rows=1 width=430)\n   ->  Seq Scan on region  (cost=0.00..12.55 rows=1 width=430)\n         Filter: ((r_name = 'a'::bpchar) AND ((r_comment)::text = 'xxx'::text))\n(3 rows)\n\ntpch=# EXPLAIN SELECT count(*) FROM region WHERE 1=1 and r_name = 'a' and r_comment = 'xxx';\n                                   QUERY PLAN\n--------------------------------------------------------------------------------\n Aggregate  (cost=12.55..12.56 rows=1 width=8)\n   ->  Seq Scan on region  (cost=0.00..12.55 rows=1 width=0)\n         Filter: ((r_name = 'a'::bpchar) AND ((r_comment)::text = 'xxx'::text))\n(3 rows)\n")),(0,o.kt)("h3",{id:"\u5e76\u884c\u67e5\u8be2"},"\u5e76\u884c\u67e5\u8be2"),(0,o.kt)("p",null,"\u67e5\u8be2\u5e76\u884c worker \u4e2a\u6570\uff0c\u8fdb\u884c\u4fee\u6539\u4e3a 4 \u4e2a workers\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-sql"},"tpch=# show max_parallel_workers_per_gather;\n max_parallel_workers_per_gather\n---------------------------------\n 2\n(1 row)\n\ntpch=# alter system set max_parallel_workers_per_gather=4;\nALTER SYSTEM\n\ntpch=# show min_parallel_table_scan_size;\n min_parallel_table_scan_size\n------------------------------\n 8MB\n(1 row)\n\ntpch=# show min_parallel_index_scan_size ;\n min_parallel_index_scan_size\n------------------------------\n 512kB\n(1 row)\n\n## Query 2 from TPC-H\ntpch=# explain (costs off) select s_acctbal, s_name, n_name, p_partkey, p_mfgr, s_address, s_phone, s_comment\nfrom    part, supplier, partsupp, nation, region\nwhere\n        p_partkey = ps_partkey\n        and s_suppkey = ps_suppkey\n        and p_size = 36\n        and p_type like '%BRASS'\n        and s_nationkey = n_nationkey\n        and n_regionkey = r_regionkey\n        and r_name = 'AMERICA'\n        and ps_supplycost = (\n                select\n                        min(ps_supplycost)\n                from    partsupp, supplier, nation, region\n                where\n                        p_partkey = ps_partkey\n                        and s_suppkey = ps_suppkey\n                        and s_nationkey = n_nationkey\n                        and n_regionkey = r_regionkey\n                        and r_name = 'AMERICA'\n        )\norder by s_acctbal desc, n_name, s_name, p_partkey\nLIMIT 100;\n                                                  QUERY PLAN\n---------------------------------------------------------------------------------------------------------------\n Limit\n   ->  Sort\n         Sort Key: supplier.s_acctbal DESC, nation.n_name, supplier.s_name, part.p_partkey\n         ->  Hash Join\n               Hash Cond: ((partsupp.ps_partkey = part.p_partkey) AND (partsupp.ps_supplycost = (SubPlan 1)))\n               ->  Nested Loop\n                     ->  Nested Loop\n                           Join Filter: (nation.n_nationkey = supplier.s_nationkey)\n                           ->  Hash Join\n                                 Hash Cond: (nation.n_regionkey = region.r_regionkey)\n                                 ->  Seq Scan on nation\n                                 ->  Hash\n                                       ->  Seq Scan on region\n                                             Filter: (r_name = 'AMERICA'::bpchar)\n                           ->  Seq Scan on supplier\n                     ->  Index Scan using partsupp_pkey on partsupp\n                           Index Cond: (ps_suppkey = supplier.s_suppkey)\n               ->  Hash\n                     ->  Seq Scan on part\n                           Filter: (((p_type)::text ~~ '%BRASS'::text) AND (p_size = 36))\n                     SubPlan 1\n                       ->  Aggregate\n                             ->  Nested Loop\n                                   ->  Nested Loop\n                                         ->  Hash Join\n                                               Hash Cond: (supplier_1.s_suppkey = partsupp_1.ps_suppkey)\n                                               ->  Seq Scan on supplier supplier_1\n                                               ->  Hash\n                                                     ->  Index Scan using partsupp_pkey on partsupp partsupp_1\n                                                           Index Cond: (ps_partkey = part.p_partkey)\n                                         ->  Index Scan using nation_pkey on nation nation_1\n                                               Index Cond: (n_nationkey = supplier_1.s_nationkey)\n                                   ->  Memoize\n                                         Cache Key: nation_1.n_regionkey\n                                         Cache Mode: logical\n                                         ->  Index Scan using region_pkey on region region_1\n                                               Index Cond: (r_regionkey = nation_1.n_regionkey)\n                                               Filter: (r_name = 'AMERICA'::bpchar)\n(38 rows)\n\n")),(0,o.kt)("h2",{id:"-\u603b\u7ed3"},"\ud83d\udcdd \u603b\u7ed3"),(0,o.kt)("p",null,"\u7b80\u5355 PG \u73af\u5883\u7684\u642d\u5efa\uff0c\u521d\u6b65\u611f\u53d7\uff0cPG \u7684\u4f18\u5316\u5668\u6bd4 MySQL \u5f3a\u7684\u4e0d\u662f\u4e00\u661f\u534a\u70b9\u5440\uff0c\u751f\u6210\u7684\u67e5\u8be2\u8ba1\u5212\u66f4\u4e3a\u590d\u6742\uff0c\u903b\u8f91\u6e05\u6670\u76f4\u63a5\uff0c\u8ba9\u4f7f\u7528\u8005\u66f4\u5bb9\u6613\u770b\u61c2\u67e5\u8be2\u8ba1\u5212\uff0c\u8fdb\u884c\u76f8\u5e94\u7684\u4f18\u5316\u4e5f\u6709\u601d\u8def\u3002"),(0,o.kt)("p",null,"PG \u591a\u8fdb\u7a0b\u5e76\u884c\u67e5\u8be2\u80fd\u529b\u4e5f\u5f88\u5f3a\uff0c\u7ed3\u5408\u4f18\u5316\u5668\u4e0e\u6267\u884c\u5668\uff0cPG \u6bd4 MySQL \u66f4\u80fd\u80dc\u4efb\u590d\u6742\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u8fd9\u4e5f\u5c31\u662f\u56fd\u5185\u5f88\u591a\u6570\u636e\u5e93\u5185\u6838\u5f00\u53d1\u66f4\u613f\u610f\u57fa\u4e8e PG \u6269\u5c55\u652f\u6301 MPP \u4ee5\u53ca HTAP \u6570\u636e\u5e93\u3002"),(0,o.kt)("h2",{id:"-\u53c2\u8003"},"\ud83d\udcc4 \u53c2\u8003"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://lldb.llvm.org/use/tutorial.html"},"LLDB \u4f7f\u7528")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://gist.github.com/patshaughnessy/70519495343412504686"},"How to Debug Postgres using LLDB on a Mac")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"https://help.aliyun.com/document_detail/156160.html"},"PG TPCH \u6d4b\u8bd5"))))}_.isMDXComponent=!0}}]);
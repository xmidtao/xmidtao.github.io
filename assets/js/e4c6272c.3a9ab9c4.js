"use strict";(self.webpackChunkagile_docs=self.webpackChunkagile_docs||[]).push([[3397],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return s}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var i=a.createContext({}),u=function(e){var t=a.useContext(i),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=u(e.components);return a.createElement(i.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,d=p(e,["components","mdxType","originalType","parentName"]),m=u(n),s=r,k=m["".concat(i,".").concat(s)]||m[s]||c[s]||o;return n?a.createElement(k,l(l({ref:t},d),{},{components:n})):a.createElement(k,l({ref:t},d))}));function s(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,l=new Array(o);l[0]=m;var p={};for(var i in t)hasOwnProperty.call(t,i)&&(p[i]=t[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,l[1]=p;for(var u=2;u<o;u++)l[u]=n[u];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8248:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return p},contentTitle:function(){return i},metadata:function(){return u},toc:function(){return d},default:function(){return m}});var a=n(3117),r=n(102),o=(n(7294),n(3905)),l=["components"],p={id:"methods",title:"Methods",sidebar_label:"Methods",slug:"/core/computed/methods"},i=void 0,u={unversionedId:"packages/core/api/computed/methods",id:"packages/core/api/computed/methods",title:"Methods",description:"Here are valuable methods of the Computed Class listed,",source:"@site/docs/packages/core/api/computed/Methods.md",sourceDirName:"packages/core/api/computed",slug:"/core/computed/methods",permalink:"/docs/core/computed/methods",editUrl:"https://github.com/xmidtao/documentation/tree/main/docs/packages/core/api/computed/Methods.md",tags:[],version:"current",lastUpdatedAt:1690869614,formattedLastUpdatedAt:"8/1/2023",frontMatter:{id:"methods",title:"Methods",sidebar_label:"Methods",slug:"/core/computed/methods"},sidebar:"docs",previous:{title:"Introduction",permalink:"/docs/core/computed"},next:{title:"Properties",permalink:"/docs/core/computed/properties"}},d=[{value:"<code>recompute()</code>",id:"recompute",children:[{value:"\ud83d\udced Props",id:"-props",children:[],level:3},{value:"\ud83d\udcc4 Return",id:"-return",children:[],level:3}],level:2},{value:"<code>updateComputeFunction()</code>",id:"updatecomputefunction",children:[{value:"\ud83d\udced Props",id:"-props-1",children:[],level:3},{value:"\ud83d\udcc4 Return",id:"-return-1",children:[],level:3}],level:2},{value:"<code>compute()</code>",id:"compute",children:[{value:"\ud83d\udced Props",id:"-props-2",children:[],level:3},{value:"\ud83d\udcc4 Return",id:"-return-2",children:[],level:3}],level:2}],c={toc:d};function m(e){var t=e.components,n=(0,r.Z)(e,l);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},"\u2757\ufe0f"),"info")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Here are valuable methods of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Computed Class")," listed,\nwhich aren't directly related to the ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/state"},(0,o.kt)("inlineCode",{parentName:"a"},"State Class")),"."),(0,o.kt)("p",{parentName:"div"},"The Computed is an extension of the ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/state"},(0,o.kt)("inlineCode",{parentName:"a"},"State Class")),"\nand offers the same methods as a normal State (",(0,o.kt)("inlineCode",{parentName:"p"},"Light State"),").\nThese State related methods aren't described in this Section.\nTo find out more about specific State methods,\ncheck out the ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/state"},"State documentation"),"."))),(0,o.kt)("h2",{id:"recompute"},(0,o.kt)("inlineCode",{parentName:"h2"},"recompute()")),(0,o.kt)("p",null,"Recomputes the value of the ",(0,o.kt)("inlineCode",{parentName:"p"},"Computed Class"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2}","{2}":!0},"const MY_COMPUTED = createComputed(() => {\n    console.log('Called Recompute');\n    return 'jeff';\n});\nMY_COMPUTED.recompute(); // console: Called Recompute\n")),(0,o.kt)("p",null,"To do this, it internally calls the ",(0,o.kt)("inlineCode",{parentName:"p"},"computeFunction()")," and detects its dependencies anew."),(0,o.kt)("h3",{id:"-props"},"\ud83d\udced Props"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"config")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/interfaces#recomputeconfig"},"RecomputeConfigInterface")),(0,o.kt)("td",{parentName:"tr",align:null},"{}"),(0,o.kt)("td",{parentName:"tr",align:null},"Configuration"),(0,o.kt)("td",{parentName:"tr",align:null},"No")))),(0,o.kt)("h3",{id:"-return"},"\ud83d\udcc4 Return"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"Computed\n")),(0,o.kt)("p",null,"Returns the ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/computed"},"Computed")," it was called on."),(0,o.kt)("br",null),(0,o.kt)("hr",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"updatecomputefunction"},(0,o.kt)("inlineCode",{parentName:"h2"},"updateComputeFunction()")),(0,o.kt)("p",null,"Updates the ",(0,o.kt)("inlineCode",{parentName:"p"},"computeFunction()")," of the Computed Class."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5-7}","{5-7}":!0},"const MY_COMPUTED = createComputed(() => {\n    return `I am '${MY_NAME.value}'`;\n});\nMY_COMPUTED.value; // Returns \"I am 'jeff'\"\nMY_COMPUTED.updateComputeFunction(() => {\n    return `Hello there, I am '${MY_NAME.value}'`;\n});\nMY_COMPUTED.value; // Returns \"Hello there, I am 'jeff'\"\n")),(0,o.kt)("p",null,"In addition, it automatically detects the newly used dependencies\nand recomputes the ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," of the Computed Class based on the new ",(0,o.kt)("inlineCode",{parentName:"p"},"computeFunction()"),".\nIn order not to rely 100% on the automatic detection of dependencies,\nwe can pass an optional array of hard coded dependencies as the second parameter."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{3}","{3}":!0},"const MY_COMPUTED = createComputed(() => {\n    return `I am '${MY_NAME.value}'`;\n}, [/* hard coded deps */]);\n")),(0,o.kt)("h3",{id:"-props-1"},"\ud83d\udced Props"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"computeFunction")),(0,o.kt)("td",{parentName:"tr",align:null},"() => ComputedValueType"),(0,o.kt)("td",{parentName:"tr",align:null},"undefined"),(0,o.kt)("td",{parentName:"tr",align:null},"New function for computing the value"),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"deps")),(0,o.kt)("td",{parentName:"tr",align:null},"Array<State ","|"," Collection ","|"," Observer>"),(0,o.kt)("td",{parentName:"tr",align:null},"[]"),(0,o.kt)("td",{parentName:"tr",align:null},"New hard coded dependencies of the Computed Class"),(0,o.kt)("td",{parentName:"tr",align:null},"Yes")),(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"config")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/interfaces#updatecomputefunctionconfig"},"UpdateComputeFunctionConfig")),(0,o.kt)("td",{parentName:"tr",align:null},"{}"),(0,o.kt)("td",{parentName:"tr",align:null},"Configuration"),(0,o.kt)("td",{parentName:"tr",align:null},"No")))),(0,o.kt)("h3",{id:"-return-1"},"\ud83d\udcc4 Return"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"Computed\n")),(0,o.kt)("p",null,"Returns the ",(0,o.kt)("a",{parentName:"p",href:"/docs/core/computed"},"Computed")," it was called on."),(0,o.kt)("br",null),(0,o.kt)("hr",null),(0,o.kt)("br",null),(0,o.kt)("h2",{id:"compute"},(0,o.kt)("inlineCode",{parentName:"h2"},"compute()")),(0,o.kt)("p",null,"Computes the ",(0,o.kt)("inlineCode",{parentName:"p"},"value")," of the Computed Class using the ",(0,o.kt)("inlineCode",{parentName:"p"},"computeFunction()"),"."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2}","{2}":!0},"MY_COMPUTED.computeFunction = () => `My name is '${MY_NAME.value}'`;\nMY_COMPUTED.compute(); // Returns \"My name is 'jeff'\"\nMY_COMPUTED.deps; // Returns '[Observer(MY_NAME)]'\n")),(0,o.kt)("p",null,"Besides computing the ",(0,o.kt)("inlineCode",{parentName:"p"},"value"),", it takes care of the automatic detection of dependencies used in the ",(0,o.kt)("inlineCode",{parentName:"p"},"computeFunction()"),".\nWe can disable this autodetection by setting ",(0,o.kt)("inlineCode",{parentName:"p"},"autodetect")," to false in the configuration object."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2}","{2}":!0},"MY_COMPUTED.computeFunction = () => `My name is '${MY_NAME.value}'`;\nMY_COMPUTED.compute({autodetect: false}); // Returns \"My name is 'jeff'\"\nMY_COMPUTED.deps; // Returns '[]'\n")),(0,o.kt)("h3",{id:"-props-2"},"\ud83d\udced Props"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:null},"Prop"),(0,o.kt)("th",{parentName:"tr",align:null},"Type"),(0,o.kt)("th",{parentName:"tr",align:null},"Default"),(0,o.kt)("th",{parentName:"tr",align:null},"Description"),(0,o.kt)("th",{parentName:"tr",align:null},"Required"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("inlineCode",{parentName:"td"},"config")),(0,o.kt)("td",{parentName:"tr",align:null},(0,o.kt)("a",{parentName:"td",href:"/docs/interfaces#updatecomputefunctionconfig"},"UpdateComputeFunctionConfig")),(0,o.kt)("td",{parentName:"tr",align:null},"{}"),(0,o.kt)("td",{parentName:"tr",align:null},"Configuration"),(0,o.kt)("td",{parentName:"tr",align:null},"No")))),(0,o.kt)("h3",{id:"-return-2"},"\ud83d\udcc4 Return"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"ComputedValueType\n")))}m.isMDXComponent=!0}}]);
"use strict";(self.webpackChunkagile_docs=self.webpackChunkagile_docs||[]).push([[2466],{3905:function(e,n,t){t.d(n,{Zo:function(){return f},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function d(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),s=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},f=function(e){var n=s(e.components);return r.createElement(o.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,l=e.originalType,o=e.parentName,f=d(e,["components","mdxType","originalType","parentName"]),u=s(t),m=a,h=u["".concat(o,".").concat(m)]||u[m]||p[m]||l;return t?r.createElement(h,i(i({ref:n},f),{},{components:t})):r.createElement(h,i({ref:n},f))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var l=t.length,i=new Array(l);i[0]=u;var d={};for(var o in n)hasOwnProperty.call(n,o)&&(d[o]=n[o]);d.originalType=e,d.mdxType="string"==typeof e?e:a,i[1]=d;for(var s=2;s<l;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8847:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return d},contentTitle:function(){return o},metadata:function(){return s},toc:function(){return f},default:function(){return u}});var r=t(3117),a=t(102),l=(t(7294),t(3905)),i=["components"],d={id:"offer",title:"\u5251\u6307 Offer",sidebar_label:"\u5251\u6307 Offer",slug:"/algorithm/offer",description:"\u5251\u6307 Offer 75 \u9898\uff0c\u523b\u610f\u7ec3\u4e60.",image:"img/meta.png"},o=void 0,s={unversionedId:"algorithm/offer",id:"algorithm/offer",title:"\u5251\u6307 Offer",description:"\u5251\u6307 Offer 75 \u9898\uff0c\u523b\u610f\u7ec3\u4e60.",source:"@site/docs/algorithm/Offer.md",sourceDirName:"algorithm",slug:"/algorithm/offer",permalink:"/docs/algorithm/offer",editUrl:"https://github.com/xmidtao/documentation/tree/main/docs/algorithm/Offer.md",tags:[],version:"current",lastUpdatedAt:1690724780,formattedLastUpdatedAt:"7/30/2023",frontMatter:{id:"offer",title:"\u5251\u6307 Offer",sidebar_label:"\u5251\u6307 Offer",slug:"/algorithm/offer",description:"\u5251\u6307 Offer 75 \u9898\uff0c\u523b\u610f\u7ec3\u4e60.",image:"img/meta.png"},sidebar:"docs",previous:{title:"\u529b\u6263",permalink:"/docs/algorithm/leetcode"},next:{title:"\u523b\u7ec3\u5e931",permalink:"/docs/algorithm/testbank1"}},f=[{value:"\u9898\u76ee",id:"\u9898\u76ee",children:[{value:"\u5b57\u7b26\u4e32",id:"\u5b57\u7b26\u4e32",children:[],level:3},{value:"\u94fe\u8868",id:"\u94fe\u8868",children:[],level:3},{value:"\u53cc\u6307\u9488",id:"\u53cc\u6307\u9488",children:[],level:3},{value:"\u6808\u4e0e\u961f\u5217",id:"\u6808\u4e0e\u961f\u5217",children:[],level:3},{value:"\u6a21\u62df",id:"\u6a21\u62df",children:[],level:3},{value:"\u67e5\u627e\u7b97\u6cd5",id:"\u67e5\u627e\u7b97\u6cd5",children:[],level:3},{value:"\u641c\u7d22\u4e0e\u56de\u6eaf\u7b97\u6cd5",id:"\u641c\u7d22\u4e0e\u56de\u6eaf\u7b97\u6cd5",children:[],level:3},{value:"\u5206\u6cbb\u7b97\u6cd5",id:"\u5206\u6cbb\u7b97\u6cd5",children:[],level:3},{value:"\u6392\u5e8f",id:"\u6392\u5e8f",children:[],level:3},{value:"\u52a8\u6001\u89c4\u5212",id:"\u52a8\u6001\u89c4\u5212",children:[],level:3},{value:"\u4f4d\u8fd0\u7b97",id:"\u4f4d\u8fd0\u7b97",children:[],level:3},{value:"\u6570\u5b66",id:"\u6570\u5b66",children:[],level:3}],level:2},{value:"\u89e3\u9898",id:"\u89e3\u9898",children:[{value:"\u5b57\u7b26\u4e32",id:"\u5b57\u7b26\u4e32-1",children:[{value:"\u5251\u6307 Offer 05. \u66ff\u6362\u7a7a\u683c",id:"\u5251\u6307-offer-05-\u66ff\u6362\u7a7a\u683c",children:[],level:4},{value:"\u5251\u6307 Offer 58 - II. \u5de6\u65cb\u8f6c\u5b57\u7b26\u4e32",id:"\u5251\u6307-offer-58---ii-\u5de6\u65cb\u8f6c\u5b57\u7b26\u4e32",children:[],level:4},{value:"\u5251\u6307 Offer 20. \u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32",id:"\u5251\u6307-offer-20-\u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32",children:[],level:4},{value:"\u5251\u6307 Offer 67. \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570",id:"\u5251\u6307-offer-67-\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570",children:[],level:4}],level:3},{value:"\u94fe\u8868",id:"\u94fe\u8868-1",children:[{value:"\u5251\u6307 Offer 06. \u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868",id:"\u5251\u6307-offer-06-\u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868",children:[],level:4},{value:"\u5251\u6307 Offer 24. \u53cd\u8f6c\u94fe\u8868",id:"\u5251\u6307-offer-24-\u53cd\u8f6c\u94fe\u8868",children:[],level:4},{value:"\u5251\u6307 Offer 35. \u590d\u6742\u94fe\u8868\u7684\u590d\u5236",id:"\u5251\u6307-offer-35-\u590d\u6742\u94fe\u8868\u7684\u590d\u5236",children:[],level:4}],level:3},{value:"\u53cc\u6307\u9488",id:"\u53cc\u6307\u9488-1",children:[{value:"\u5251\u6307 Offer 18. \u5220\u9664\u94fe\u8868\u7684\u8282\u70b9",id:"\u5251\u6307-offer-18-\u5220\u9664\u94fe\u8868\u7684\u8282\u70b9",children:[],level:4},{value:"\u5251\u6307 Offer 22. \u94fe\u8868\u4e2d\u5012\u6570\u7b2ck\u4e2a\u8282\u70b9",id:"\u5251\u6307-offer-22-\u94fe\u8868\u4e2d\u5012\u6570\u7b2ck\u4e2a\u8282\u70b9",children:[],level:4},{value:"\u5251\u6307 Offer 25. \u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868",id:"\u5251\u6307-offer-25-\u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868",children:[],level:4},{value:"\u5251\u6307 Offer 52. \u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9",id:"\u5251\u6307-offer-52-\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9",children:[],level:4},{value:"\u5251\u6307 Offer 21. \u8c03\u6574\u6570\u7ec4\u987a\u5e8f\u4f7f\u5947\u6570\u4f4d\u4e8e\u5076\u6570\u524d\u9762",id:"\u5251\u6307-offer-21-\u8c03\u6574\u6570\u7ec4\u987a\u5e8f\u4f7f\u5947\u6570\u4f4d\u4e8e\u5076\u6570\u524d\u9762",children:[],level:4},{value:"\u5251\u6307 Offer 57. \u548c\u4e3as\u7684\u4e24\u4e2a\u6570\u5b57",id:"\u5251\u6307-offer-57-\u548c\u4e3as\u7684\u4e24\u4e2a\u6570\u5b57",children:[],level:4},{value:"\u5251\u6307 Offer 58 - I. \u7ffb\u8f6c\u5355\u8bcd\u987a\u5e8f",id:"\u5251\u6307-offer-58---i-\u7ffb\u8f6c\u5355\u8bcd\u987a\u5e8f",children:[],level:4}],level:3},{value:"\u6808\u4e0e\u961f\u5217",id:"\u6808\u4e0e\u961f\u5217-1",children:[{value:"\u5251\u6307 Offer 09. \u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217",id:"\u5251\u6307-offer-09-\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217",children:[],level:4},{value:"\u5251\u6307 Offer 30. \u5305\u542bmin\u51fd\u6570\u7684\u6808",id:"\u5251\u6307-offer-30-\u5305\u542bmin\u51fd\u6570\u7684\u6808",children:[],level:4},{value:"\u5251\u6307 Offer 59 - I. \u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c",id:"\u5251\u6307-offer-59---i-\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c",children:[],level:4},{value:"\u5251\u6307 Offer 59 - II. \u961f\u5217\u7684\u6700\u5927\u503c",id:"\u5251\u6307-offer-59---ii-\u961f\u5217\u7684\u6700\u5927\u503c",children:[],level:4}],level:3},{value:"\u6a21\u62df",id:"\u6a21\u62df-1",children:[{value:"\u5251\u6307 Offer 29. \u987a\u65f6\u9488\u6253\u5370\u77e9\u9635",id:"\u5251\u6307-offer-29-\u987a\u65f6\u9488\u6253\u5370\u77e9\u9635",children:[],level:4},{value:"\u5251\u6307 Offer 31. \u6808\u7684\u538b\u5165\u3001\u5f39\u51fa\u5e8f\u5217",id:"\u5251\u6307-offer-31-\u6808\u7684\u538b\u5165\u5f39\u51fa\u5e8f\u5217",children:[],level:4}],level:3},{value:"\u67e5\u627e\u7b97\u6cd5",id:"\u67e5\u627e\u7b97\u6cd5-1",children:[{value:"\u5251\u6307 Offer 03. \u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57",id:"\u5251\u6307-offer-03-\u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57",children:[],level:4},{value:"\u5251\u6307 Offer 53 - I. \u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u6570\u5b57 I",id:"\u5251\u6307-offer-53---i-\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u6570\u5b57-i",children:[],level:4},{value:"\u5251\u6307 Offer 53 - II. 0\uff5en-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57",id:"\u5251\u6307-offer-53---ii-0n-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57",children:[],level:4},{value:"\u5251\u6307 Offer 04. \u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u67e5\u627e",id:"\u5251\u6307-offer-04-\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u67e5\u627e",children:[],level:4},{value:"\u5251\u6307 Offer 11. \u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57",id:"\u5251\u6307-offer-11-\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57",children:[],level:4},{value:"\u5251\u6307 Offer 50. \u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26",id:"\u5251\u6307-offer-50-\u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26",children:[],level:4}],level:3},{value:"\u641c\u7d22\u4e0e\u56de\u6eaf\u7b97\u6cd5",id:"\u641c\u7d22\u4e0e\u56de\u6eaf\u7b97\u6cd5-1",children:[{value:"\u5251\u6307 Offer 32 - I. \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",id:"\u5251\u6307-offer-32---i-\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811",children:[],level:4},{value:"\u5251\u6307 Offer 32 - II. \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811 II",id:"\u5251\u6307-offer-32---ii-\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811-ii",children:[],level:4},{value:"\u5251\u6307 Offer 32 - III. \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811 III",id:"\u5251\u6307-offer-32---iii-\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811-iii",children:[],level:4},{value:"\u5251\u6307 Offer 26. \u6811\u7684\u5b50\u7ed3\u6784",id:"\u5251\u6307-offer-26-\u6811\u7684\u5b50\u7ed3\u6784",children:[],level:4},{value:"\u5251\u6307 Offer 27. \u4e8c\u53c9\u6811\u7684\u955c\u50cf",id:"\u5251\u6307-offer-27-\u4e8c\u53c9\u6811\u7684\u955c\u50cf",children:[],level:4},{value:"\u5251\u6307 Offer 28. \u5bf9\u79f0\u7684\u4e8c\u53c9\u6811",id:"\u5251\u6307-offer-28-\u5bf9\u79f0\u7684\u4e8c\u53c9\u6811",children:[],level:4},{value:"\u5251\u6307 Offer 12. \u77e9\u9635\u4e2d\u7684\u8def\u5f84",id:"\u5251\u6307-offer-12-\u77e9\u9635\u4e2d\u7684\u8def\u5f84",children:[],level:4},{value:"\u5251\u6307 Offer 13. \u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",id:"\u5251\u6307-offer-13-\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4",children:[],level:4},{value:"\u5251\u6307 Offer 34. \u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84",id:"\u5251\u6307-offer-34-\u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84",children:[],level:4},{value:"\u5251\u6307 Offer 36. \u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868",id:"\u5251\u6307-offer-36-\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868",children:[],level:4},{value:"\u5251\u6307 Offer 54. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9",id:"\u5251\u6307-offer-54-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9",children:[],level:4},{value:"\u5251\u6307 Offer 55 - I. \u4e8c\u53c9\u6811\u7684\u6df1\u5ea6",id:"\u5251\u6307-offer-55---i-\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6",children:[],level:4},{value:"\u5251\u6307 Offer 55 - II. \u5e73\u8861\u4e8c\u53c9\u6811",id:"\u5251\u6307-offer-55---ii-\u5e73\u8861\u4e8c\u53c9\u6811",children:[],level:4},{value:"\u5251\u6307 Offer 64. \u6c421+2+\u2026+n",id:"\u5251\u6307-offer-64-\u6c4212n",children:[],level:4},{value:"\u5251\u6307 Offer 68 - I. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",id:"\u5251\u6307-offer-68---i-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",children:[],level:4},{value:"\u5251\u6307 Offer 68 - II. \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",id:"\u5251\u6307-offer-68---ii-\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148",children:[],level:4},{value:"\u5251\u6307 Offer 37. \u5e8f\u5217\u5316\u4e8c\u53c9\u6811",id:"\u5251\u6307-offer-37-\u5e8f\u5217\u5316\u4e8c\u53c9\u6811",children:[],level:4},{value:"\u5251\u6307 Offer 38. \u5b57\u7b26\u4e32\u7684\u6392\u5217",id:"\u5251\u6307-offer-38-\u5b57\u7b26\u4e32\u7684\u6392\u5217",children:[],level:4}],level:3},{value:"\u5206\u6cbb\u7b97\u6cd5",id:"\u5206\u6cbb\u7b97\u6cd5-1",children:[{value:"\u5251\u6307 Offer 07. \u91cd\u5efa\u4e8c\u53c9\u6811",id:"\u5251\u6307-offer-07-\u91cd\u5efa\u4e8c\u53c9\u6811",children:[],level:4},{value:"\u5251\u6307 Offer 16. \u6570\u503c\u7684\u6574\u6570\u6b21\u65b9",id:"\u5251\u6307-offer-16-\u6570\u503c\u7684\u6574\u6570\u6b21\u65b9",children:[],level:4},{value:"\u5251\u6307 Offer 33. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",id:"\u5251\u6307-offer-33-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217",children:[],level:4},{value:"\u5251\u6307 Offer 17. \u6253\u5370\u4ece1\u5230\u6700\u5927\u7684n\u4f4d\u6570",id:"\u5251\u6307-offer-17-\u6253\u5370\u4ece1\u5230\u6700\u5927\u7684n\u4f4d\u6570",children:[],level:4},{value:"\u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9",id:"\u5251\u6307-offer-51-\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9",children:[],level:4}],level:3},{value:"\u6392\u5e8f",id:"\u6392\u5e8f-1",children:[{value:"\u5251\u6307 Offer 45. \u628a\u6570\u7ec4\u6392\u6210\u6700\u5c0f\u7684\u6570",id:"\u5251\u6307-offer-45-\u628a\u6570\u7ec4\u6392\u6210\u6700\u5c0f\u7684\u6570",children:[],level:4},{value:"\u5251\u6307 Offer 61. \u6251\u514b\u724c\u4e2d\u7684\u987a\u5b50",id:"\u5251\u6307-offer-61-\u6251\u514b\u724c\u4e2d\u7684\u987a\u5b50",children:[],level:4},{value:"\u5251\u6307 Offer 40. \u6700\u5c0f\u7684k\u4e2a\u6570",id:"\u5251\u6307-offer-40-\u6700\u5c0f\u7684k\u4e2a\u6570",children:[],level:4},{value:"\u5251\u6307 Offer 41. \u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570",id:"\u5251\u6307-offer-41-\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570",children:[],level:4}],level:3},{value:"\u52a8\u6001\u89c4\u5212",id:"\u52a8\u6001\u89c4\u5212-1",children:[{value:"\u5251\u6307 Offer 10- I. \u6590\u6ce2\u90a3\u5951\u6570\u5217",id:"\u5251\u6307-offer-10--i-\u6590\u6ce2\u90a3\u5951\u6570\u5217",children:[],level:4},{value:"\u5251\u6307 Offer 10- II. \u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898",id:"\u5251\u6307-offer-10--ii-\u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898",children:[],level:4},{value:"\u5251\u6307 Offer 63. \u80a1\u7968\u7684\u6700\u5927\u5229\u6da6",id:"\u5251\u6307-offer-63-\u80a1\u7968\u7684\u6700\u5927\u5229\u6da6",children:[],level:4},{value:"\u5251\u6307 Offer 42. \u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c",id:"\u5251\u6307-offer-42-\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c",children:[],level:4},{value:"\u5251\u6307 Offer 47. \u793c\u7269\u7684\u6700\u5927\u4ef7\u503c",id:"\u5251\u6307-offer-47-\u793c\u7269\u7684\u6700\u5927\u4ef7\u503c",children:[],level:4},{value:"\u5251\u6307 Offer 46. \u628a\u6570\u5b57\u7ffb\u8bd1\u6210\u5b57\u7b26\u4e32",id:"\u5251\u6307-offer-46-\u628a\u6570\u5b57\u7ffb\u8bd1\u6210\u5b57\u7b26\u4e32",children:[],level:4},{value:"\u5251\u6307 Offer 48. \u6700\u957f\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u5b50\u5b57\u7b26\u4e32",id:"\u5251\u6307-offer-48-\u6700\u957f\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u5b50\u5b57\u7b26\u4e32",children:[],level:4},{value:"\u5251\u6307 Offer 19. \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d",id:"\u5251\u6307-offer-19-\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d",children:[],level:4},{value:"\u5251\u6307 Offer 49. \u4e11\u6570",id:"\u5251\u6307-offer-49-\u4e11\u6570",children:[],level:4},{value:"\u5251\u6307 Offer 60. n\u4e2a\u9ab0\u5b50\u7684\u70b9\u6570",id:"\u5251\u6307-offer-60-n\u4e2a\u9ab0\u5b50\u7684\u70b9\u6570",children:[],level:4}],level:3},{value:"\u4f4d\u8fd0\u7b97",id:"\u4f4d\u8fd0\u7b97-1",children:[{value:"\u5251\u6307 Offer 15. \u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",id:"\u5251\u6307-offer-15-\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570",children:[],level:4},{value:"\u5251\u6307 Offer 65. \u4e0d\u7528\u52a0\u51cf\u4e58\u9664\u505a\u52a0\u6cd5",id:"\u5251\u6307-offer-65-\u4e0d\u7528\u52a0\u51cf\u4e58\u9664\u505a\u52a0\u6cd5",children:[],level:4},{value:"\u5251\u6307 Offer 56 - I. \u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570",id:"\u5251\u6307-offer-56---i-\u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570",children:[],level:4},{value:"\u5251\u6307 Offer 56 - II. \u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570 II",id:"\u5251\u6307-offer-56---ii-\u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570-ii",children:[],level:4}],level:3},{value:"\u6570\u5b66",id:"\u6570\u5b66-1",children:[{value:"\u5251\u6307 Offer 39. \u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57",id:"\u5251\u6307-offer-39-\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57",children:[],level:4},{value:"\u5251\u6307 Offer 66. \u6784\u5efa\u4e58\u79ef\u6570\u7ec4",id:"\u5251\u6307-offer-66-\u6784\u5efa\u4e58\u79ef\u6570\u7ec4",children:[],level:4},{value:"\u5251\u6307 Offer 14- I. \u526a\u7ef3\u5b50",id:"\u5251\u6307-offer-14--i-\u526a\u7ef3\u5b50",children:[],level:4},{value:"\u5251\u6307 Offer 14- II. \u526a\u7ef3\u5b50 II",id:"\u5251\u6307-offer-14--ii-\u526a\u7ef3\u5b50-ii",children:[],level:4},{value:"\u5251\u6307 Offer 57 - II. \u548c\u4e3as\u7684\u8fde\u7eed\u6b63\u6570\u5e8f\u5217",id:"\u5251\u6307-offer-57---ii-\u548c\u4e3as\u7684\u8fde\u7eed\u6b63\u6570\u5e8f\u5217",children:[],level:4},{value:"\u5251\u6307 Offer 62. \u5706\u5708\u4e2d\u6700\u540e\u5269\u4e0b\u7684\u6570\u5b57",id:"\u5251\u6307-offer-62-\u5706\u5708\u4e2d\u6700\u540e\u5269\u4e0b\u7684\u6570\u5b57",children:[],level:4},{value:"\u5251\u6307 Offer 43. 1\uff5en \u6574\u6570\u4e2d 1 \u51fa\u73b0\u7684\u6b21\u6570",id:"\u5251\u6307-offer-43-1n-\u6574\u6570\u4e2d-1-\u51fa\u73b0\u7684\u6b21\u6570",children:[],level:4},{value:"\u5251\u6307 Offer 44. \u6570\u5b57\u5e8f\u5217\u4e2d\u67d0\u4e00\u4f4d\u7684\u6570\u5b57",id:"\u5251\u6307-offer-44-\u6570\u5b57\u5e8f\u5217\u4e2d\u67d0\u4e00\u4f4d\u7684\u6570\u5b57",children:[],level:4}],level:3}],level:2}],p={toc:f};function u(e){var n=e.components,t=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("p",null,"\u8de8\u56fd\u5de8\u5934\u516c\u53f8\u9762\u8bd5\u5b98\u62bc\u9898\u5b9d\u5178\u3002"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"https://leetcode.cn/studyplan/coding-interviews/"},"\u5251\u6307 Offer75 \u9898\u3002")," ")),(0,l.kt)("h2",{id:"\u9898\u76ee"},"\u9898\u76ee"),(0,l.kt)("h3",{id:"\u5b57\u7b26\u4e32"},"\u5b57\u7b26\u4e32"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/ti-huan-kong-ge-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 05. \u66ff\u6362\u7a7a\u683c")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5b57\u7b26\u4e32")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 58 - II. \u5de6\u65cb\u8f6c\u5b57\u7b26\u4e32")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5b57\u7b26\u4e32\u3001\u6570\u5b66\u3001\u53cc\u6307\u9488")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/biao-shi-shu-zhi-de-zi-fu-chuan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 20. \u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5b57\u7b26\u4e32")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 67. \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5b57\u7b26\u4e32")))),(0,l.kt)("h3",{id:"\u94fe\u8868"},"\u94fe\u8868"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 06. \u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6808\u3001\u9012\u5f52\u3001\u94fe\u8868")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 24. \u53cd\u8f6c\u94fe\u8868")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9012\u5f52\u3001\u94fe\u8868")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/fu-za-lian-biao-de-fu-zhi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 35. \u590d\u6742\u94fe\u8868\u7684\u590d\u5236")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u54c8\u5e0c\u8868\u3001\u94fe\u8868")))),(0,l.kt)("h3",{id:"\u53cc\u6307\u9488"},"\u53cc\u6307\u9488"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shan-chu-lian-biao-de-jie-dian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 18. \u5220\u9664\u94fe\u8868\u7684\u8282\u70b9")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u94fe\u8868")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 22. \u94fe\u8868\u4e2d\u5012\u6570\u7b2ck\u4e2a\u8282\u70b9")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u94fe\u8868\u3001\u53cc\u6307\u9488")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 25. \u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9012\u5f52\u3001\u94fe\u8868")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 52. \u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9012\u5f52\u3001\u94fe\u8868")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 21. \u8c03\u6574\u6570\u7ec4\u987a\u5e8f\u4f7f\u5947\u6570\u4f4d\u4e8e\u5076\u6570\u524d\u9762")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u53cc\u6307\u9488\u3001\u6392\u5e8f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/he-wei-sde-liang-ge-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 57. \u548c\u4e3as\u7684\u4e24\u4e2a\u6570\u5b57")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u53cc\u6307\u9488\u3001\u4e8c\u5206\u67e5\u627e")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/fan-zhuan-dan-ci-shun-xu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 58 - I. \u7ffb\u8f6c\u5355\u8bcd\u987a\u5e8f")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u53cc\u6307\u9488\u3001\u5b57\u7b26\u4e32")))),(0,l.kt)("h3",{id:"\u6808\u4e0e\u961f\u5217"},"\u6808\u4e0e\u961f\u5217"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 09. \u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6808\u3001\u8bbe\u8ba1\u3001\u961f\u5217")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 30. \u5305\u542bmin\u51fd\u6570\u7684\u6808")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6808\u3001\u8bbe\u8ba1")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 59 - I. \u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56f0\u96be"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u961f\u5217\u3001\u6ed1\u52a8\u7a97\u53e3\u3001\u5355\u8c03\u961f\u5217")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 59 - II. \u961f\u5217\u7684\u6700\u5927\u503c")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u8ba1\u3001\u961f\u5217\u3001\u5355\u8c03\u961f\u5217")))),(0,l.kt)("h3",{id:"\u6a21\u62df"},"\u6a21\u62df"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 29. \u987a\u65f6\u9488\u6253\u5370\u77e9\u9635")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u77e9\u9635\u3001\u6a21\u62df")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 31. \u6808\u7684\u538b\u5165\u3001\u5f39\u51fa\u5e8f\u5217")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6808\u3001\u6570\u7ec4\u3001\u6a21\u62df")))),(0,l.kt)("h3",{id:"\u67e5\u627e\u7b97\u6cd5"},"\u67e5\u627e\u7b97\u6cd5"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 03. \u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u6392\u5e8f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 53 - I. \u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u6570\u5b57 I")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/que-shi-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 53 - II. 0\uff5en-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u8fd0\u7b97\u3001\u6570\u7ec4\u3001\u54c8\u5e0c\u8868")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 04. \u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u67e5\u627e")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e\u3001\u5206\u6cbb")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 11. \u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u4e8c\u5206\u67e5\u627e")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 50. \u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u961f\u5217\u3001\u54c8\u5e0c\u8868\u3001\u5b57\u7b26\u4e32")))),(0,l.kt)("h3",{id:"\u641c\u7d22\u4e0e\u56de\u6eaf\u7b97\u6cd5"},"\u641c\u7d22\u4e0e\u56de\u6eaf\u7b97\u6cd5"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 32 - I. \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 32 - II. \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811 II")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 32 - III. \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811 III")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 26. \u6811\u7684\u5b50\u7ed3\u6784")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 27. \u4e8c\u53c9\u6811\u7684\u955c\u50cf")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 28. \u5bf9\u79f0\u7684\u4e8c\u53c9\u6811")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/ju-zhen-zhong-de-lu-jing-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 12. \u77e9\u9635\u4e2d\u7684\u8def\u5f84")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u56de\u6eaf\u3001\u77e9\u9635")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 13. \u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 34. \u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u56de\u6eaf")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 36. \u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6808\u3001\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 54. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u641c\u7d22\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 55 - I. \u4e8c\u53c9\u6811\u7684\u6df1\u5ea6")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 55 - II. \u5e73\u8861\u4e8c\u53c9\u6811")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/qiu-12n-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 64. \u6c421+2+\u2026+n")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u8fd0\u7b97\u3001\u9012\u5f52\u3001\u8111\u7b4b\u6025\u8f6c\u5f2f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 68 - I. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u53c9\u641c\u7d22\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 68 - II. \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u4e8c\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 37. \u5e8f\u5217\u5316\u4e8c\u53c9\u6811")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56f0\u96be"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6df1\u5ea6\u4f18\u5148\u641c\u7d22\u3001\u5e7f\u5ea6\u4f18\u5148\u641c\u7d22")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/zi-fu-chuan-de-pai-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 38. \u5b57\u7b26\u4e32\u7684\u6392\u5217")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5b57\u7b26\u4e32\u3001\u56de\u6eaf")))),(0,l.kt)("h3",{id:"\u5206\u6cbb\u7b97\u6cd5"},"\u5206\u6cbb\u7b97\u6cd5"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 07. \u91cd\u5efa\u4e8c\u53c9\u6811")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u3001\u6570\u7ec4\u3001\u54c8\u5e0c\u8868")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shu-zhi-de-zheng-shu-ci-fang-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 16. \u6570\u503c\u7684\u6574\u6570\u6b21\u65b9")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9012\u5f52\u3001\u6570\u5b66")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 33. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6808\u3001\u6570\u3001\u4e8c\u53c9\u641c\u7d20\u6811")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/da-yin-cong-1dao-zui-da-de-nwei-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 17. \u6253\u5370\u4ece1\u5230\u6700\u5927\u7684n\u4f4d\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u6570\u5b66")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56f0\u96be"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6811\u72b6\u6570\u7ec4\u3001\u7ebf\u6bb5\u6811\u3001\u6570\u7ec4")))),(0,l.kt)("h3",{id:"\u6392\u5e8f"},"\u6392\u5e8f"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/ba-shu-zu-pai-cheng-zui-xiao-de-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 45. \u628a\u6570\u7ec4\u6392\u6210\u6700\u5c0f\u7684\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8d2a\u5fc3\u3001\u5b57\u7b26\u4e32\u3001\u6392\u5e8f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/bu-ke-pai-zhong-de-shun-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 61. \u6251\u514b\u724c\u4e2d\u7684\u987a\u5b50")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u6392\u5e8f")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 40. \u6700\u5c0f\u7684k\u4e2a\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u5206\u6cbb\u3001\u5feb\u901f\u9009\u62e9")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shu-ju-liu-zhong-de-zhong-wei-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 41. \u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56f0\u96be"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bbe\u8ba1\u3001\u53cc\u6307\u9488\u3001\u6570\u636e\u6d41")))),(0,l.kt)("h3",{id:"\u52a8\u6001\u89c4\u5212"},"\u52a8\u6001\u89c4\u5212"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 10- I. \u6590\u6ce2\u90a3\u5951\u6570\u5217")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bb0\u5fc6\u5316\u641c\u7d22\u3001\u6570\u5b66\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 10- II. \u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u8bb0\u5fc6\u5316\u641c\u7d22\u3001\u6570\u5b66\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/gu-piao-de-zui-da-li-run-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 63. \u80a1\u7968\u7684\u6700\u5927\u5229\u6da6")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 42. \u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u5206\u6cbb\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 47. \u793c\u7269\u7684\u6700\u5927\u4ef7\u503c")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u52a8\u6001\u89c4\u5212\u3001\u77e9\u9635")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 46. \u628a\u6570\u5b57\u7ffb\u8bd1\u6210\u5b57\u7b26\u4e32")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5b57\u7b26\u4e32\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 48. \u6700\u957f\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u5b50\u5b57\u7b26\u4e32")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u54c8\u5e0c\u8868\u3001\u5b57\u7b26\u4e32\u3001\u6ed1\u52a8\u7a97\u53e3")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/zheng-ze-biao-da-shi-pi-pei-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 19. \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56f0\u96be"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9012\u5f52\u3001\u5b57\u7b26\u4e32\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/chou-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 49. \u4e11\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u54c8\u5e0c\u8868\u3001\u6570\u5b66\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 60. n\u4e2a\u9ab0\u5b50\u7684\u70b9\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u5b66\u3001\u52a8\u6001\u89c4\u5212\u3001\u6982\u7387\u4e0e\u7edf\u8ba1")))),(0,l.kt)("h3",{id:"\u4f4d\u8fd0\u7b97"},"\u4f4d\u8fd0\u7b97"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/er-jin-zhi-zhong-1de-ge-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 15. \u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u8fd0\u7b97")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 65. \u4e0d\u7528\u52a0\u51cf\u4e58\u9664\u505a\u52a0\u6cd5")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u8fd0\u7b97\u3001\u6570\u5b66")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 56 - I. \u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u8fd0\u7b97\u3001\u6570\u7ec4")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-ii-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 56 - II. \u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570 II")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u4f4d\u8fd0\u7b97\u3001\u6570\u7ec4")))),(0,l.kt)("h3",{id:"\u6570\u5b66"},"\u6570\u5b66"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"\u540d\u79f0"),(0,l.kt)("th",{parentName:"tr",align:null},"\u7ea7\u522b"),(0,l.kt)("th",{parentName:"tr",align:null},"\u72b6\u6001"),(0,l.kt)("th",{parentName:"tr",align:null},"\u5907\u6ce8"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 39. \u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u54c8\u5e0c\u8868\u3001\u5206\u6cbb")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/gou-jian-cheng-ji-shu-zu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 66. \u6784\u5efa\u4e58\u79ef\u6570\u7ec4")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u7ec4\u3001\u524d\u7f00\u548c")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/jian-sheng-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 14- I. \u526a\u7ef3\u5b50")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u5b66\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/jian-sheng-zi-ii-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 14- II. \u526a\u7ef3\u5b50 II")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u5b66\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/he-wei-sde-lian-xu-zheng-shu-xu-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 57 - II. \u548c\u4e3as\u7684\u8fde\u7eed\u6b63\u6570\u5e8f\u5217")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u5b66\u3001\u53cc\u6307\u9488\u3001\u679a\u4e3e")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 62. \u5706\u5708\u4e2d\u6700\u540e\u5269\u4e0b\u7684\u6570\u5b57")),(0,l.kt)("td",{parentName:"tr",align:null},"\u7b80\u5355"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9012\u5f52\u3001\u6570\u5b66")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 43. 1\uff5en \u6574\u6570\u4e2d 1 \u51fa\u73b0\u7684\u6b21\u6570")),(0,l.kt)("td",{parentName:"tr",align:null},"\u56f0\u96be"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u9012\u5f52\u3001\u6570\u5b66\u3001\u52a8\u6001\u89c4\u5212")),(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"https://leetcode.cn/problems/shu-zi-xu-lie-zhong-mou-yi-wei-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 44. \u6570\u5b57\u5e8f\u5217\u4e2d\u67d0\u4e00\u4f4d\u7684\u6570\u5b57")),(0,l.kt)("td",{parentName:"tr",align:null},"\u4e2d\u7b49"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5df2\u89e3\u7b54"),(0,l.kt)("td",{parentName:"tr",align:null},"\u6570\u5b66\u3001\u4e8c\u5206\u67e5\u627e")))),(0,l.kt)("h2",{id:"\u89e3\u9898"},"\u89e3\u9898"),(0,l.kt)("h3",{id:"\u5b57\u7b26\u4e32-1"},"\u5b57\u7b26\u4e32"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-05-\u66ff\u6362\u7a7a\u683c"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/ti-huan-kong-ge-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 05. \u66ff\u6362\u7a7a\u683c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def replaceSpace(self, s: str) -> str:\n        if not s: return \"\"\n\n        # \u65f6\u95f4\u590d\u6742\u5ea6\uff1aO(N)\n        # \u7a7a\u95f4\u590d\u6742\u5ea6\uff1aO(N)\n        result = \"\"\n        for i in s:\n            if i == ' ':\n                result += '%20'\n            else:\n                result += i\n        return result\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-58---ii-\u5de6\u65cb\u8f6c\u5b57\u7b26\u4e32"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/zuo-xuan-zhuan-zi-fu-chuan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 58 - II. \u5de6\u65cb\u8f6c\u5b57\u7b26\u4e32")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def reverseLeftWords(self, s: str, n: int) -> str:\n        if not s and k < 1: return ""\n        # py \u4e0b\u6807\u83b7\u53d6\u5b57\u7b26\u4e32\u662f\u5de6\u95ed\uff0c\u53f3\u5f00\n        return s[n:len(s)] + s[0:n]\n')),(0,l.kt)("h4",{id:"\u5251\u6307-offer-20-\u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/biao-shi-shu-zhi-de-zi-fu-chuan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 20. \u8868\u793a\u6570\u503c\u7684\u5b57\u7b26\u4e32")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def isNumber(self, s: str) -> bool:\n        try:\n            float(s.strip())\n        except:\n            return False\n        return True\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-67-\u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/ba-zi-fu-chuan-zhuan-huan-cheng-zheng-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 67. \u628a\u5b57\u7b26\u4e32\u8f6c\u6362\u6210\u6574\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def strToInt(self, str: str) -> int:\n        # \u53bb\u9664\u524d\u5bfc\u7a7a\u683c\n        str = str.strip()\n        if not str: return 0\n        if len(str) == 0: return 0\n\n        sign = 1\n        if str[0] == '-':\n            sign = -1\n            str = str[1:]\n        elif str[0] == '+':\n            str = str[1:]\n        \n        # \u8f6c\u6362\u5b57\u7b26\u4e32\u4e3a\u6574\u6570\n        res = 0\n        for c in str:\n            if not c.isdigit():\n                break\n            res = res * 10 + int(c)\n            # \u5224\u65ad\u662f\u5426\u8d85\u8fc7\u6574\u6570\u8303\u56f4\n            if res > 2**31 - 1:\n                return 2**31 - 1 if sign == 1 else -2**31\n        return sign * res\n\n")),(0,l.kt)("h3",{id:"\u94fe\u8868-1"},"\u94fe\u8868"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-06-\u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 06. \u4ece\u5c3e\u5230\u5934\u6253\u5370\u94fe\u8868")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def reversePrint(self, head: ListNode) -> List[int]:\n        res = []\n        curr = head\n        while curr:\n            res.append(curr.val)\n            curr = curr.next\n        return res[::-1]\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-24-\u53cd\u8f6c\u94fe\u8868"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/fan-zhuan-lian-biao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 24. \u53cd\u8f6c\u94fe\u8868")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def reverseList(self, head: ListNode) -> ListNode:\n        if not head: return None\n\n        prev = None\n        curr = head\n        while curr:\n            next_node = curr.next\n            curr.next = prev\n            prev = curr\n            curr = next_node\n        return prev\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-35-\u590d\u6742\u94fe\u8868\u7684\u590d\u5236"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/fu-za-lian-biao-de-fu-zhi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 35. \u590d\u6742\u94fe\u8868\u7684\u590d\u5236")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def copyRandomList(self, head: 'Node') -> 'Node':\n        self.map = {}\n        return self.copList(head)\n\n    def copList(self, head):\n        if not head: return None\n\n        if head in self.map:\n            return self.map.get(head)\n        else:\n            node = Node(head.val)\n            self.map[head] = node\n            node.next = self.copList(head.next)\n            node.random = self.copList(head.random)\n        return self.map.get(head)\n\n")),(0,l.kt)("h3",{id:"\u53cc\u6307\u9488-1"},"\u53cc\u6307\u9488"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-18-\u5220\u9664\u94fe\u8868\u7684\u8282\u70b9"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shan-chu-lian-biao-de-jie-dian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 18. \u5220\u9664\u94fe\u8868\u7684\u8282\u70b9")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def deleteNode(self, head: ListNode, val: int) -> ListNode:\n        if not head: return None\n        if head.val == val: return head.next\n        pre, cur = head, head.next\n        while cur:\n            if cur.val == val:\n                pre.next = cur.next\n                break\n            else:\n                pre, cur = cur, cur.next\n        return head\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-22-\u94fe\u8868\u4e2d\u5012\u6570\u7b2ck\u4e2a\u8282\u70b9"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/lian-biao-zhong-dao-shu-di-kge-jie-dian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 22. \u94fe\u8868\u4e2d\u5012\u6570\u7b2ck\u4e2a\u8282\u70b9")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def getKthFromEnd(self, head: ListNode, k: int) -> ListNode:\n        fast = head\n        low = head\n        for _ in range(k):\n            if not fast: return\n            fast = fast.next\n        while fast:\n            fast,low = fast.next, low.next\n        return low\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-25-\u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/he-bing-liang-ge-pai-xu-de-lian-biao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 25. \u5408\u5e76\u4e24\u4e2a\u6392\u5e8f\u7684\u94fe\u8868")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def mergeTwoLists(self, l1: ListNode, l2: ListNode) -> ListNode:\n        if l1 is None:\n            return l2\n        elif l2 is None:\n            return l1\n        elif l1.val < l2.val:\n            l1.next = self.mergeTwoLists(l1.next, l2)\n            return l1\n        else:\n            l2.next = self.mergeTwoLists(l1, l2.next)\n            return l2\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-52-\u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/liang-ge-lian-biao-de-di-yi-ge-gong-gong-jie-dian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 52. \u4e24\u4e2a\u94fe\u8868\u7684\u7b2c\u4e00\u4e2a\u516c\u5171\u8282\u70b9")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def getIntersectionNode(self, headA: ListNode, headB: ListNode) -> ListNode:\n        l1 = headA\n        l2 = headB\n        while l1 != l2:\n            if l1 is None:\n                l1 = headB\n            else:\n                l1 = l1.next\n            if l2 is None:\n                l2 = headA\n            else:\n                l2 = l2.next\n        return l1\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-21-\u8c03\u6574\u6570\u7ec4\u987a\u5e8f\u4f7f\u5947\u6570\u4f4d\u4e8e\u5076\u6570\u524d\u9762"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/diao-zheng-shu-zu-shun-xu-shi-qi-shu-wei-yu-ou-shu-qian-mian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 21. \u8c03\u6574\u6570\u7ec4\u987a\u5e8f\u4f7f\u5947\u6570\u4f4d\u4e8e\u5076\u6570\u524d\u9762")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def exchange(self, nums: List[int]) -> List[int]:\n        if not nums: return nums\n        return self.s2(nums)\n\n    def s2(self, nums):\n        n = len(nums)\n        res,left,right = [0] * n,0,n-1\n        for num in nums:\n            if num % 2 == 1:\n                res[left] = num\n                left +=1\n            else:\n                res[right] = num\n                right -= 1\n        return res\n\n    def s1(self, nums):\n        res = []\n        for i in nums:\n            if i%2 == 1:\n                res.append(i)\n        for i in nums:\n            if i%2 == 0:\n                res.append(i)\n        return res\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-57-\u548c\u4e3as\u7684\u4e24\u4e2a\u6570\u5b57"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/he-wei-sde-liang-ge-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 57. \u548c\u4e3as\u7684\u4e24\u4e2a\u6570\u5b57")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def twoSum(self, nums: List[int], target: int) -> List[int]:\n        if not nums: return []\n        left,right = 0,len(nums)-1\n        while left <= right:\n            if nums[left] + nums[right] == target:\n                return [nums[left],nums[right]]\n            elif nums[left] + nums[right] > target:\n                right -=1\n            else:\n                left +=1\n        return []\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-58---i-\u7ffb\u8f6c\u5355\u8bcd\u987a\u5e8f"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/fan-zhuan-dan-ci-shun-xu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 58 - I. \u7ffb\u8f6c\u5355\u8bcd\u987a\u5e8f")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def reverseWords(self, s: str) -> str:\n        if not s: return ""\n        res = ""\n        words = s.strip().split(" ")\n        for i in range(len(words)-1, -1, -1):\n            if len(words[i]) > 0:\n                res += " " + words[i]\n        return res.strip()\n')),(0,l.kt)("h3",{id:"\u6808\u4e0e\u961f\u5217-1"},"\u6808\u4e0e\u961f\u5217"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-09-\u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 09. \u7528\u4e24\u4e2a\u6808\u5b9e\u73b0\u961f\u5217")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class CQueue:\n\n    def __init__(self):\n        self.in_s = []\n        self.out_s = []\n\n    def appendTail(self, value: int) -> None:\n        self.in_s.append(value)\n\n    def deleteHead(self) -> int:\n        if len(self.out_s) == 0:\n            if len(self.in_s) == 0:\n                return -1 \n            else:\n                while self.in_s:\n                    self.out_s.append(self.in_s.pop())\n        return self.out_s.pop()\n\n# Your CQueue object will be instantiated and called as such:\n# obj = CQueue()\n# obj.appendTail(value)\n# param_2 = obj.deleteHead()\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-30-\u5305\u542bmin\u51fd\u6570\u7684\u6808"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/bao-han-minhan-shu-de-zhan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 30. \u5305\u542bmin\u51fd\u6570\u7684\u6808")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'class MinStack:\n\n    def __init__(self):\n        """\n        initialize your data structure here.\n        """\n        self.stack = []\n        self.min_stack = []\n\n    def push(self, x: int) -> None:\n        self.stack.append(x)\n        if len(self.min_stack) == 0 or x <= self.min_stack[-1]:\n            self.min_stack.append(x)\n\n    def pop(self) -> None:\n        r = self.stack.pop()\n        if r == self.min_stack[-1]:\n            self.min_stack.pop()\n\n    def top(self) -> int:\n        return self.stack[-1]\n\n    def min(self) -> int:\n        return self.min_stack[-1]\n\n# Your MinStack object will be instantiated and called as such:\n# obj = MinStack()\n# obj.push(x)\n# obj.pop()\n# param_3 = obj.top()\n# param_4 = obj.min()\n')),(0,l.kt)("h4",{id:"\u5251\u6307-offer-59---i-\u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 59 - I. \u6ed1\u52a8\u7a97\u53e3\u7684\u6700\u5927\u503c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'class Solution:\n    def maxSlidingWindow(self, nums: List[int], k: int) -> List[int]:\n        n = len(nums)\n        q = [(-nums[i], i) for i in range(k)]\n        heapq.heapify(q)\n    \n        ans = [-q[0][0]]\n        for i in range(k, n):\n            heapq.heappush(q, (-nums[i], i))\n            while q[0][1]  <= i-k:\n                heapq.heappop(q)\n            ans.append(-q[0][0])\n        return ans\n\n    def s1(self, nums, k):\n        start,end = 0,k\n        res = []\n        while end <= len(nums):\n            v = self.maxWindow(nums, start, end)\n            res.append(v)\n            start += 1\n            end += 1\n        return res\n    \n    def maxWindow(self, nums, start, end):\n        maximun = float("-inf")\n        for i in range(start, end):\n            if maximun < nums[i]:\n                maximun = nums[i]\n        return maximun\n')),(0,l.kt)("h4",{id:"\u5251\u6307-offer-59---ii-\u961f\u5217\u7684\u6700\u5927\u503c"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/dui-lie-de-zui-da-zhi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 59 - II. \u961f\u5217\u7684\u6700\u5927\u503c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class MaxQueue:\n\n    def __init__(self):\n        self.q = deque()\n\n    def max_value(self) -> int:\n        return max(self.q) if self.q else -1\n\n    def push_back(self, value: int) -> None:\n        self.q.append(value)\n\n    def pop_front(self) -> int:\n        return self.q.popleft() if self.q else -1\n\n# Your MaxQueue object will be instantiated and called as such:\n# obj = MaxQueue()\n# param_1 = obj.max_value()\n# obj.push_back(value)\n# param_3 = obj.pop_front()\n\n")),(0,l.kt)("h3",{id:"\u6a21\u62df-1"},"\u6a21\u62df"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-29-\u987a\u65f6\u9488\u6253\u5370\u77e9\u9635"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shun-shi-zhen-da-yin-ju-zhen-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 29. \u987a\u65f6\u9488\u6253\u5370\u77e9\u9635")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def spiralOrder(self, matrix: List[List[int]]) -> List[int]:\n        if not matrix or  not matrix[0]: return list()\n\n        rows, columns = len(matrix), len(matrix[0])\n        order = list()\n        left, right, top, bottom = 0, columns -1, 0, rows -1\n        while left <= right and top <= bottom:\n            for column in range(left, right + 1):\n                order.append(matrix[top][column])\n            for row in range(top + 1, bottom + 1):\n                order.append(matrix[row][right])\n            if left < right and top < bottom:\n                for column in range(right-1, left, -1):\n                    order.append(matrix[bottom][column])\n                for row in range(bottom, top, -1):\n                    order.append(matrix[row][left])\n            left, right, top, bottom = left + 1, right - 1, top + 1, bottom - 1\n        return order\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-31-\u6808\u7684\u538b\u5165\u5f39\u51fa\u5e8f\u5217"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/zhan-de-ya-ru-dan-chu-xu-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 31. \u6808\u7684\u538b\u5165\u3001\u5f39\u51fa\u5e8f\u5217")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def validateStackSequences(self, pushed: List[int], popped: List[int]) -> bool:\n        st, j = [],0\n        for x in pushed:\n            st.append(x)\n            while st and st[-1] == popped[j]:\n                st.pop()\n                j += 1\n        return len(st) == 0\n\n")),(0,l.kt)("h3",{id:"\u67e5\u627e\u7b97\u6cd5-1"},"\u67e5\u627e\u7b97\u6cd5"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-03-\u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 03. \u6570\u7ec4\u4e2d\u91cd\u590d\u7684\u6570\u5b57")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def findRepeatNumber(self, nums: List[int]) -> int:\n        if not nums: return -1\n        numbers = [-1] * len(nums)\n        for i in nums:\n            if numbers[i] != -1 and numbers[i] == i:\n                return i\n            else:\n                numbers[i] = i\n        return -1\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-53---i-\u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u6570\u5b57-i"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/zai-pai-xu-shu-zu-zhong-cha-zhao-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 53 - I. \u5728\u6392\u5e8f\u6570\u7ec4\u4e2d\u67e5\u627e\u6570\u5b57 I")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def search(self, nums: List[int], target: int) -> int:\n        return self.helper(nums, target) - self.helper(nums, target - 1)\n    \n    def helper(self, nums, target):\n        i,j = 0, len(nums) - 1\n        while i <= j:\n            m = (i + j)//2\n            if nums[m] <= target:\n                i = m + 1\n            else:\n                j = m - 1\n        return i\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-53---ii-0n-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/que-shi-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 53 - II. 0\uff5en-1\u4e2d\u7f3a\u5931\u7684\u6570\u5b57")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def missingNumber(self, nums: List[int]) -> int:\n        left, right = 0, len(nums) - 1\n        while left <= right:\n            mid = (left + right)//2\n            if nums[mid] == mid:\n                left = mid + 1\n            else:\n                right = mid - 1\n        return left\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-04-\u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u67e5\u627e"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-wei-shu-zu-zhong-de-cha-zhao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 04. \u4e8c\u7ef4\u6570\u7ec4\u4e2d\u7684\u67e5\u627e")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def findNumberIn2DArray(self, matrix: List[List[int]], target: int) -> bool:\n        if len(matrix) == 0: return False\n        for i in range(len(matrix)):\n            nums = matrix[i]\n            left,right = 0, len(nums) - 1\n            while left <= right:\n                mid = (left + right)//2\n                if nums[mid] == target:\n                    return True\n                elif nums[mid] < target:\n                    left = mid + 1\n                else:\n                    right = mid - 1\n        return False\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-11-\u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/xuan-zhuan-shu-zu-de-zui-xiao-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 11. \u65cb\u8f6c\u6570\u7ec4\u7684\u6700\u5c0f\u6570\u5b57")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def minArray(self, numbers: List[int]) -> int:\n        # \u53ea\u6709\u4e00\u4e2a\u5143\u7d20\uff0c\u6570\u7ec4\u7684\u6700\u5c0f\u503c\u4e3a 1\uff1bPS\uff1a\u9650\u5236\u6761\u4ef6\n        if len(numbers) == 1: return 1\n        for i in range(1, len(numbers)):\n            # \u65cb\u8f6c\u4ee5\u540e\uff0c\u5b50\u5e8f\u5217\u4e3a\u5347\u5e8f\uff0c\u5e76\u4e14\u524d\u4e00\u534a\u5e8f\u5217\u6bd4\u540e\u4e00\u534a\u90fd\u5927\uff0c\u5982\u679c\u51fa\u73b0\u76f8\u51cf < 0 \u8bf4\u660e i \u5c31\u662f\u6211\u4eec\u8981\u627e\u7684\u6700\u5c0f\u5143\u7d20\n            if numbers[i] - numbers[i-1] < 0:\n                return numbers[i]\n        # \u5143\u7d20\u5b8c\u5168\u76f8\u540c\uff0c\u6bd4\u5982\uff1a[-1,-1,-1] \u6216\u8005 [1,1,1,1]\n        return numbers[0]\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-50-\u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/di-yi-ge-zhi-chu-xian-yi-ci-de-zi-fu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 50. \u7b2c\u4e00\u4e2a\u53ea\u51fa\u73b0\u4e00\u6b21\u7684\u5b57\u7b26")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def firstUniqChar(self, s: str) -> str:\n        if not s: return ' '\n        dic = dict()\n        for c in s:\n            if c in dic:\n                dic[c] = dic[c] + 1 \n            else:\n                dic[c] = 1\n        for k,v in dic.items():\n            if v == 1: return k\n        return ' '\n    \n    def s1(self, s):\n        if not s: return ' '\n        kv = dict()\n        for i in s:\n            if i in kv:\n                kv[i] = kv[i] + 1\n            else:\n                kv[i] = 1\n        for i in s:\n            if i in kv and kv[i] == 1:\n                return i\n        return ' '\n")),(0,l.kt)("h3",{id:"\u641c\u7d22\u4e0e\u56de\u6eaf\u7b97\u6cd5-1"},"\u641c\u7d22\u4e0e\u56de\u6eaf\u7b97\u6cd5"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-32---i-\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 32 - I. \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[int]:\n        # \u524d\u5e8f\u904d\u5386\uff1a\u6839\u5de6\u53f3 -> BFS\n        if not root: return []\n        res = []\n        queue = deque()\n        queue.append(root)\n\n        while queue:\n            node = queue.popleft()\n            res.append(node.val)\n            if node.left: queue.append(node.left)\n            if node.right: queue.append(node.right)\n        return res\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-32---ii-\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811-ii"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-ii-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 32 - II. \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811 II")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        if not root: return []\n        queue,res = deque(),[]\n        queue.append(root)\n\n        while queue:\n            tmp = []\n            for _ in range(len(queue)):\n                v = queue.popleft()\n                tmp.append(v.val)\n                if v.left: queue.append(v.left)\n                if v.right: queue.append(v.right)\n            res.append(tmp)\n        return res\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-32---iii-\u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811-iii"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/cong-shang-dao-xia-da-yin-er-cha-shu-iii-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 32 - III. \u4ece\u4e0a\u5230\u4e0b\u6253\u5370\u4e8c\u53c9\u6811 III")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def levelOrder(self, root: TreeNode) -> List[List[int]]:\n        if not root: return []\n        # bfs \u6309\u5c42\u6253\u5370\uff0c\u5728\u53cd\u8f6c\u6570\u7ec4\n        res = []\n        def bfs(root):\n            queue = collections.deque()\n            queue.append(root)\n            \n            state = True\n            while queue:\n                level = []\n                for _ in range(len(queue)):\n                    node = queue.popleft()\n                    level.append(node.val)\n                    if node.left:\n                        queue.append(node.left)\n                    if node.right:\n                        queue.append(node.right)\n                if state:\n                    res.append(level)\n                else:\n                    res.append(level[::-1])\n                state = False if state else True\n        bfs(root)\n        return res\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-26-\u6811\u7684\u5b50\u7ed3\u6784"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shu-de-zi-jie-gou-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 26. \u6811\u7684\u5b50\u7ed3\u6784")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSubStructure(self, A: TreeNode, B: TreeNode) -> bool:\n        def recur(A, B):\n            if not B: return True\n            if not A or A.val != B.val: return False\n            return recur(A.left, B.left) and recur(A.right, B.right)\n        \n        return bool(A and B) and (recur(A, B) or self.isSubStructure(A.left, B) or self.isSubStructure(A.right, B))\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-27-\u4e8c\u53c9\u6811\u7684\u955c\u50cf"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-cha-shu-de-jing-xiang-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 27. \u4e8c\u53c9\u6811\u7684\u955c\u50cf")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def mirrorTree(self, root: TreeNode) -> TreeNode:\n        # return self.swap(root)\n        return TreeNode(root.val, self.mirrorTree(root.right), self.mirrorTree(root.left)) if root else None\n    \n    def swap(self, node):\n            if node:\n                self.swap(node.left)\n                self.swap(node.right)\n                left = node.left\n                node.left= node.right\n                node.right = left\n                return node\n            else:\n                return node\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-28-\u5bf9\u79f0\u7684\u4e8c\u53c9\u6811"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/dui-cheng-de-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 28. \u5bf9\u79f0\u7684\u4e8c\u53c9\u6811")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isSymmetric(self, root: TreeNode) -> bool:\n        rnode = self.swap(root)\n        return self.is_same_tree(root, rnode)\n    \n    def is_same_tree(self, A, B):\n        # \u503c\u90fd\u4e3a\u7a7a\uff0c\u8bf4\u660e\u76f8\u7b49\n        if A is None and B is None: return True\n        # \u4efb\u610f\u4e00\u4e2a\u4e3a\u7a7a\n        if A is None or B is None: return False\n        # \u503c\u4e0d\u76f8\u7b49\n        if A.val != B.val: return False\n        return self.is_same_tree(A.left, B.left) and self.is_same_tree(A.right, B.right)\n\n    def swap(self, root):\n        return TreeNode(root.val, self.swap(root.right), self.swap(root.left)) if root else None\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-12-\u77e9\u9635\u4e2d\u7684\u8def\u5f84"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/ju-zhen-zhong-de-lu-jing-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 12. \u77e9\u9635\u4e2d\u7684\u8def\u5f84")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def exist(self, board: List[List[str]], word: str) -> bool:\n        if not board or not board[0]: return False\n        self.board = board\n        self.word = word\n        self.m,self.n = len(board), len(board[0])\n        self.visited = [[False] * self.n for _ in range(self.m)]\n        for i in range(self.m):\n            for j in range(self.n):\n                if self.backtrack(i,j,0):\n                    return True\n        \n        return False\n    \n    def backtrack(self, i, j, index):\n        # \u5355\u8bcd\u5df2\u5339\u914d\n        if len(self.word) == index:\n            return True\n        \n        # \u8d8a\u754c\u3001\u5b57\u7b26\u4e0d\u5339\u914d\u3001\u88ab\u8bbf\u95ee\u7b49\u60c5\u51b5\n        if i < 0 or i >= self.m or j < 0 or j >= self.n \\\n            or self.board[i][j] != self.word[index] \\\n            or self.visited[i][j]:\n            return False \n        \n        self.visited[i][j] = True\n\n        # \u9012\u5f52\u641c\u7d22\u76f8\u90bb\u7684\u5b57\u7b26\uff1a\u4e0a\u4e0b\u5de6\u53f3\u641c\u7d22\n        if self.backtrack(i + 1, j, index + 1) \\\n           or self.backtrack(i - 1, j, index + 1) \\\n           or self.backtrack(i, j + 1, index + 1) \\\n           or self.backtrack(i, j - 1, index + 1):\n           return True\n        \n        # \u56de\u6eaf\uff0c\u53d6\u6d88\u5f53\u524d\u4f4d\u7f6e\u6807\u8bb0\n        self.visited[i][j] = False\n\n        return False\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-13-\u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/ji-qi-ren-de-yun-dong-fan-wei-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 13. \u673a\u5668\u4eba\u7684\u8fd0\u52a8\u8303\u56f4")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def movingCount(self, m: int, n: int, k: int) -> int:\n        if m <=0 or n <= 0 or k < 0: return 0\n        visited = set()\n\n        def getDigitSum(num):\n            res = 0\n            while num:\n                res += num % 10\n                num //= 10\n            return res\n\n        def dfs(i, j):\n            # \u8d8a\u754c\u3001\u88ab\u8bbf\u95ee\u3001\u5750\u6807\u4e4b\u548c\u662f\u5426\u7b49\u4e8eK\n            if i < 0 \\\n                or i >= m \\\n                or j < 0 \\\n                or j >= n \\\n                or (i, j) in visited \\\n                or getDigitSum(i) + getDigitSum(j) > k:\n                return 0\n            \n            # \u6807\u8bb0\u5f53\u524d\u4f4d\u7f6e\u5df2\u8bbf\u95ee\n            visited.add((i,j))\n\n            # \u9012\u5f52\u641c\u7d22\u76f8\u90bb\u4f4d\u7f6e\n            return 1 + dfs(i + 1, j) + dfs(i - 1, j) + dfs(i, j + 1) + dfs(i, j - 1)\n\n        return dfs(0, 0)\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-34-\u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-cha-shu-zhong-he-wei-mou-yi-zhi-de-lu-jing-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 34. \u4e8c\u53c9\u6811\u4e2d\u548c\u4e3a\u67d0\u4e00\u503c\u7684\u8def\u5f84")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, val=0, left=None, right=None):\n#         self.val = val\n#         self.left = left\n#         self.right = right\nclass Solution:\n    def pathSum(self, root: TreeNode, target: int) -> List[List[int]]:\n        result = []\n        if not root:\n            return result\n\n        def dfs(node, path, path_cnt):\n            # \u7ed3\u675f\u6761\u4ef6\uff0c\u8d70\u5230 node \u53f6\u5b50\u8282\u70b9\n            if not node: \n                return\n            path.append(node.val)\n            path_cnt += node.val\n            # \u9012\u5f52\u7ed3\u679c\n            if not node.left and not node.right and path_cnt == target:\n                # path[:] \u590d\u5236 path \u5185\u5bb9\uff0c\u653e\u5165\u5230 result \u4e2d\n                result.append(path[:])\n            dfs(node.left, path, path_cnt)\n            dfs(node.right, path, path_cnt)\n            path.pop()\n        \n        dfs(root,[],0)\n        return result\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-36-\u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-yu-shuang-xiang-lian-biao-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 36. \u4e8c\u53c9\u641c\u7d22\u6811\u4e0e\u53cc\u5411\u94fe\u8868")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'"""\n# Definition for a Node.\nclass Node:\n    def __init__(self, val, left=None, right=None):\n        self.val = val\n        self.left = left\n        self.right = right\n"""\nclass Solution:\n    def treeToDoublyList(self, root: \'Node\') -> \'Node\':\n        if not root: return None\n        result = []\n        def dfs(root):\n            if root:\n                dfs(root.left)\n                result.append(root)\n                dfs(root.right)\n        \n        # \u4e2d\u5e8f\u904d\u5386\u5f97\u5230\u6709\u5e8f\u5217\u8868\n        dfs(root)\n        \n        # \u6574\u7406\u4e2d\u5e8f\u904d\u5386\u5217\u8868\u4e3a\u53cc\u5411\u94fe\u8868\n        n = len(result)\n        for i in range(1, n-1):\n            result[i].left = result[i-1]\n            result[i].right = result[i+1]\n        \n        # \u5355\u72ec\u5904\u7406 head \u548c tail \u8282\u70b9\n        head = result[0]\n        head.left = result[-1]\n        head.right = result[1] if n > 1 else head\n        if n > 1:\n            tail = head.left\n            # tail.left \u5012\u6570\u7b2c\u4e8c\u4e2anode\uff0cright \u662f head \u8282\u70b9\n            tail.left = result[-2]\n            tail.right = head\n        return head\n')),(0,l.kt)("h4",{id:"\u5251\u6307-offer-54-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-di-kda-jie-dian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 54. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u7b2ck\u5927\u8282\u70b9")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def kthLargest(self, root: TreeNode, k: int) -> int:\n        s = []\n        def dfs(root):\n            if not root: return\n            dfs(root.left)\n            s.append(root.val)\n            dfs(root.right)\n        \n        # dfs \u4e2d\u5e8f\u904d\u5386\uff0c\u4e8c\u53c9\u641c\u7d22\u6811\u7ed3\u679c\u6709\u5e8f\uff0ck \u5927\uff0c\u5219\u662f -k \u6570\u7ec4\u503c\n        dfs(root)\n        return s[-k]\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-55---i-\u4e8c\u53c9\u6811\u7684\u6df1\u5ea6"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-cha-shu-de-shen-du-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 55 - I. \u4e8c\u53c9\u6811\u7684\u6df1\u5ea6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def maxDepth(self, root: TreeNode) -> int:\n        if not root: return 0\n        queue,cnt = deque(),0\n        queue.append(root)\n        while queue:\n            for _ in range(len(queue)):\n                node = queue.popleft()\n                if node.left: queue.append(node.left)\n                if node.right: queue.append(node.right)\n            cnt += 1\n        return cnt\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-55---ii-\u5e73\u8861\u4e8c\u53c9\u6811"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/ping-heng-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 55 - II. \u5e73\u8861\u4e8c\u53c9\u6811")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def isBalanced(self, root: TreeNode) -> bool:\n        def recur(root):\n            if not root: return 0\n            left = recur(root.left)\n            if left == -1: return -1\n            right = recur(root.right)\n            if right == -1: return -1\n            return max(left, right) + 1 if abs(left-right) <= 1 else -1\n        \n        return recur(root) != -1\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-64-\u6c4212n"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/qiu-12n-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 64. \u6c421+2+\u2026+n")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def sumNums(self, n: int) -> int:\n        if n <=0: return 0\n        # 0 and num, \u8fd4\u56de 0\uff0c\u975e0\u8fd4\u56denum\n        return n and (n + self.sumNums(n-1))\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-68---i-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-zui-jin-gong-gong-zu-xian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 68 - I. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: 'TreeNode', p: 'TreeNode', q: 'TreeNode') -> 'TreeNode':\n        return self.find2(root, p, q)\n\n    def find2(self, root, p, q):\n        # \u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u7279\u6027\uff1a\u5de6\u8fb9\n        if p.val < root.val > q.val:\n            return self.find2(root.left, p, q)\n        # \u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u7279\u6027\uff1a\u53f3\u8fb9\n        if p.val > root.val < q.val:\n            return self.find2(root.right, p, q)\n        return root\n\n    def find1(self, root, p, q):\n        if not root or root == p or root == q:\n            return root\n        \n        left = self.lowestCommonAncestor(root.left, p, q)\n        right = self.lowestCommonAncestor(root.right, p, q)\n        if not left:\n            return right\n        if not right:\n            return left\n        return root\n    \n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-68---ii-\u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-cha-shu-de-zui-jin-gong-gong-zu-xian-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 68 - II. \u4e8c\u53c9\u6811\u7684\u6700\u8fd1\u516c\u5171\u7956\u5148")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def lowestCommonAncestor(self, root: TreeNode, p: TreeNode, q: TreeNode) -> TreeNode:\n        if not root or root == p or root == q: return root\n        left = self.lowestCommonAncestor(root.left, p, q)\n        right = self.lowestCommonAncestor(root.right, p, q)\n        if not left:\n            return right\n        if not right:\n            return left\n        return root\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-37-\u5e8f\u5217\u5316\u4e8c\u53c9\u6811"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/xu-lie-hua-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 37. \u5e8f\u5217\u5316\u4e8c\u53c9\u6811")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'# Definition for a binary tree node.\n# class TreeNode(object):\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Codec:\n    # \u524d\u5e8f\u904d\u5386(\u6839\u5de6\u53f3)\uff0cpreOrder \u8fdb\u884c\u5e8f\u5217\u5316\u4e3a\u5b57\u7b26\u4e32\uff0c\u5b57\u7b26\u4e32\u53cd\u5e8f\u5217\u5316\u4e3a\u4e8c\u53c9\u6811\n    def serialize(self, root):\n        """Encodes a tree to a single string.\n        \n        :type root: TreeNode\n        :rtype: str\n        """\n        if not root:\n            return "#"\n        return str(root.val) + "," + self.serialize(root.left) + "," + self.serialize(root.right)\n\n    def deserialize(self, data):\n        """Decodes your encoded data to tree.\n        \n        :type data: str\n        :rtype: TreeNode\n        """\n        def helper(nodes):\n            if not nodes: return None\n            val = nodes.pop(0) # \u5f39\u51fa\u5de6\u8fb9\u7b2c\u4e00\u4e2a\u5143\u7d20\n            if val == "#":\n                return None\n            node = TreeNode(int(val))\n            node.left = helper(nodes)\n            node.right = helper(nodes)\n            return node\n\n        nodes = data.split(",")\n        return helper(nodes)\n        \n\n# Your Codec object will be instantiated and called as such:\n# codec = Codec()\n# codec.deserialize(codec.serialize(root))\n')),(0,l.kt)("h4",{id:"\u5251\u6307-offer-38-\u5b57\u7b26\u4e32\u7684\u6392\u5217"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/zi-fu-chuan-de-pai-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 38. \u5b57\u7b26\u4e32\u7684\u6392\u5217")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def permutation(self, s: str) -> List[str]:\n        res = []\n        chars = list(s)\n\n        def backtrack(start):\n            if start == len(chars) - 1:\n                res.append(''.join(chars))\n                return\n            \n            visited = set()\n            for i in range(start, len(chars)):\n                if chars[i] in visited:\n                    continue\n                visited.add(chars[i])\n                chars[start],chars[i] = chars[i],chars[start]\n                backtrack(start + 1)\n                # \u590d\u539f\u5b57\u7b26\u6570\u7ec4\n                chars[start],chars[i] = chars[i],chars[start]\n        \n        backtrack(0)\n        return res\n\n")),(0,l.kt)("h3",{id:"\u5206\u6cbb\u7b97\u6cd5-1"},"\u5206\u6cbb\u7b97\u6cd5"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-07-\u91cd\u5efa\u4e8c\u53c9\u6811"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/zhong-jian-er-cha-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 07. \u91cd\u5efa\u4e8c\u53c9\u6811")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"# Definition for a binary tree node.\n# class TreeNode:\n#     def __init__(self, x):\n#         self.val = x\n#         self.left = None\n#         self.right = None\n\nclass Solution:\n    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:\n        # \u524d\u5e8f\u904d\u5386\uff1a\u6839\u5de6\u53f3\n        # \u4e2d\u5e8f\u904d\u5386\uff1a\u5de6\u6839\u53f3\n        def buildTreeHelper(pre_start, pre_end, in_start, in_end):\n            if pre_start > pre_end:\n                return None\n            \n            root_val = preorder[pre_start]\n            root = TreeNode(root_val)\n            # \u83b7\u53d6 root_val \u5728 inorder \u4e2d\u7684\u4f4d\u7f6e\n            in_index = inorder.index(root_val)\n            # \u5de6\u8fb9\u6709\u591a\u5c11\u4e2a\u5143\u7d20\uff1a \u4e2d\u5e8f\u904d\u5386 root \u5de6\u8fb9\u5143\u7d20\u5de6\u5b50\u6811\u5143\u7d20\u4e2a\u6570\n            left_size = in_index - in_start\n            root.left = buildTreeHelper(pre_start + 1, pre_start + left_size, in_start, in_index - 1)\n            root.right = buildTreeHelper(pre_start + left_size + 1, pre_end, in_index + 1, in_end)\n\n            return root\n\n        return buildTreeHelper(0, len(preorder)-1, 0, len(inorder)-1)\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-16-\u6570\u503c\u7684\u6574\u6570\u6b21\u65b9"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shu-zhi-de-zheng-shu-ci-fang-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 16. \u6570\u503c\u7684\u6574\u6570\u6b21\u65b9")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def myPow(self, x: float, n: int) -> float:\n        if n == 0:\n            return 1\n        elif n < 0:\n            return 1 / self.myPow(x, -n)\n        elif n % 2 == 0:\n            return self.myPow(x * x, n // 2)\n        else:\n            return x * self.myPow(x * x, n // 2)\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-33-\u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-cha-sou-suo-shu-de-hou-xu-bian-li-xu-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 33. \u4e8c\u53c9\u641c\u7d22\u6811\u7684\u540e\u5e8f\u904d\u5386\u5e8f\u5217")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def verifyPostorder(self, postorder: List[int]) -> bool:\n        # \u540e\u5e8f\u904d\u5386\uff1a\u5de6\u53f3\u6839\n        # \u4e2d\u5e8f\u904d\u5386\uff1a\u5de6\u6839\u53f3\n        # \u524d\u5e8f\u904d\u5386\uff1a\u6839\u5de6\u53f3\n        if not postorder: \n            return True\n        \n        def helper(start, end):\n            if start >= end:\n                return True\n            root_val = postorder[end]\n            i = start\n\n            # \u4e8c\u53c9\u641c\u7d22\u6811\uff0c\u5de6\u5b50\u6811\u90fd\u5c0f\u4e8e root_val\n            while i < end and postorder[i] < root_val:\n                i += 1\n\n            # i \u662f\u53f3\u5b50\u6811\u7684\u7b2c\u4e00\u4e2a\u503c\n            j = i\n            while j < end and postorder[j] > root_val:\n                j += 1\n            \n            # \u53f3\u5b50\u6811\u80fd\u8d70\u5230\u5012\u6570\u7b2c\u4e8c\u4e2a\u8282\u70b9\uff0c\u624d\u6ee1\u8db3\u53f3\u5b50\u6811\u90fd\u5927\u4e8e root_val\n            if j != end:\n                return False\n            \n            # \u5de6\u5b50\u6811\u8303\u56f4\uff1astart - (i-1)\n            left_subtree = helper(start, i - 1)\n            # \u53f3\u5b50\u6811\u8303\u56f4\uff1ai - \uff08end - 1\uff09\uff0c\u9700\u6392\u9664 root \u8282\u70b9\n            right_subtree = helper(i, end - 1)\n            return left_subtree and right_subtree\n        \n        return helper(0, len(postorder) - 1)\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-17-\u6253\u5370\u4ece1\u5230\u6700\u5927\u7684n\u4f4d\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/da-yin-cong-1dao-zui-da-de-nwei-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 17. \u6253\u5370\u4ece1\u5230\u6700\u5927\u7684n\u4f4d\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def printNumbers(self, n: int) -> List[int]:\n        res = []\n        for i in range(1, pow(10, n)):\n            res.append(i)\n        return res\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-51-\u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shu-zu-zhong-de-ni-xu-dui-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 51. \u6570\u7ec4\u4e2d\u7684\u9006\u5e8f\u5bf9")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def reversePairs(self, nums: List[int]) -> int:\n        def merge_sort(l, r):\n            # \u7ec8\u6b62\u6761\u4ef6\n            if l >= r: return 0\n            # \u9012\u5f52\u5212\u5206\n            m = (l + r) // 2\n            res = merge_sort(l, m) + merge_sort(m + 1, r)\n            # \u5408\u5e76\u9636\u6bb5\n            i, j = l, m + 1\n            tmp[l:r + 1] = nums[l:r + 1]\n            for k in range(l, r + 1):\n                if i == m + 1:\n                    nums[k] = tmp[j]\n                    j += 1\n                elif j == r + 1 or tmp[i] <= tmp[j]:\n                    nums[k] = tmp[i]\n                    i += 1\n                else:\n                    nums[k] = tmp[j]\n                    j += 1\n                    res += m - i + 1 # \u7edf\u8ba1\u9006\u5e8f\u5bf9\n            return res\n        \n        tmp = [0] * len(nums)\n        return merge_sort(0, len(nums) - 1)\n    \n    # \u8d85\u65f6\n    def s1(self, nums): \n        cnt = 0\n        for i in range(0, len(nums)-1):\n            for j in range(i + 1, len(nums)):\n                if nums[i] > nums[j]:\n                    cnt += 1\n        return cnt\n")),(0,l.kt)("h3",{id:"\u6392\u5e8f-1"},"\u6392\u5e8f"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-45-\u628a\u6570\u7ec4\u6392\u6210\u6700\u5c0f\u7684\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/ba-shu-zu-pai-cheng-zui-xiao-de-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 45. \u628a\u6570\u7ec4\u6392\u6210\u6700\u5c0f\u7684\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def minNumber(self, nums: List[int]) -> str:\n        # \u5c06\u6570\u5b57\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\n        nums = [str(num) for num in nums]\n\n        # \u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570 \n        def compare(a, b):\n            if a + b < b + a:\n                return -1\n            elif a + b > b + a:\n                return 1\n            else:\n                return 0\n        \n        # \u4f7f\u7528\u81ea\u5b9a\u4e49\u6bd4\u8f83\u51fd\u6570\u6392\u5e8f\n        nums.sort(key=cmp_to_key(compare))\n\n        # \u5c06\u6392\u5e8f\u540e\u7684\u5b57\u7b26\u4e32\u6570\u7ec4\u62fc\u63a5\u8d77\u6765\n        return ''.join(nums)\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-61-\u6251\u514b\u724c\u4e2d\u7684\u987a\u5b50"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/bu-ke-pai-zhong-de-shun-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 61. \u6251\u514b\u724c\u4e2d\u7684\u987a\u5b50")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def isStraight(self, nums: List[int]) -> bool:\n        if not nums: return False\n        joker = 0\n        nums.sort()\n        for i in range(4):\n            if nums[i] == 0: joker += 1 # \u7edf\u8ba1\u5927\u5c0f\u738b\u6570\u91cf\n            elif nums[i] == nums[i + 1]: return False # \u91cd\u590d\u6570\u5b57\uff0c\u8fd4\u56de False\n        return nums[4] - nums[joker] < 5 # \u6700\u5927\u724c - \u6700\u5c0f\u724c < 5 \u5219\u53ef\u6784\u6210\u987a\u5b50\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-40-\u6700\u5c0f\u7684k\u4e2a\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/zui-xiao-de-kge-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 40. \u6700\u5c0f\u7684k\u4e2a\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"}," def getLeastNumbers(self, arr: List[int], k: int) -> List[int]:\n        if not arr or k <= 0: return []\n        arr.sort()\n        return arr[0:k]\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-41-\u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shu-ju-liu-zhong-de-zhong-wei-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 41. \u6570\u636e\u6d41\u4e2d\u7684\u4e2d\u4f4d\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'class MedianFinder:\n\n    def __init__(self):\n        """\n        initialize your data structure here.\n        """\n        self.nums = []\n\n    def addNum(self, num: int) -> None:\n        self.nums.append(num)\n\n    def findMedian(self) -> float:\n        self.nums.sort()\n        if len(self.nums) % 2 == 1:\n            return self.nums[len(self.nums)//2]\n        else:\n            mid = len(self.nums)//2\n            return (self.nums[mid] + self.nums[mid-1])/2\n\n# Your MedianFinder object will be instantiated and called as such:\n# obj = MedianFinder()\n# obj.addNum(num)\n# param_2 = obj.findMedian()\n')),(0,l.kt)("h3",{id:"\u52a8\u6001\u89c4\u5212-1"},"\u52a8\u6001\u89c4\u5212"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-10--i-\u6590\u6ce2\u90a3\u5951\u6570\u5217"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/fei-bo-na-qi-shu-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 10- I. \u6590\u6ce2\u90a3\u5951\u6570\u5217")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def fib(self, n: int) -> int:\n        a, b = 0, 1\n        for _ in range(n):\n            a, b = b, a + b\n        return a % 1000000007\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-10--ii-\u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/qing-wa-tiao-tai-jie-wen-ti-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 10- II. \u9752\u86d9\u8df3\u53f0\u9636\u95ee\u9898")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def numWays(self, n: int) -> int:\n        if n == 0: return 1\n        if n <= 3: return n\n        dp = [0] * (n + 1)\n        dp[0] = 0\n        dp[1] = 1\n        dp[2] = 2\n        for i in range(3, n+1):\n            dp[i] = dp[i-1] + dp[i-2]\n        return dp[-1]%1000000007\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-63-\u80a1\u7968\u7684\u6700\u5927\u5229\u6da6"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/gu-piao-de-zui-da-li-run-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 63. \u80a1\u7968\u7684\u6700\u5927\u5229\u6da6")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def maxProfit(self, prices: List[int]) -> int:\n        # return self.s2(prices)\n        # dp \u6c42\u89e3\n        if not prices: return 0\n\n        # \u7ed3\u679c\n        res = 0\n\n        # \u503c\u5b58\u50a8\n        profit = [[0 for i in range(3)] for i in range(len(prices))]\n\n        # \u72b6\u6001\u5b9a\u4e49: \u7b2c\u4e00\u4e2a\u4e0b\u6807\uff0c\u4ee3\u8868\u7b2c 0 \u5929\uff0c\u7b2c\u4e8c\u4e2a\u4e0b\u6807\uff0c\u4ee3\u8868\u64cd\u4f5c\u4e86\u591a\u5c11\u6b21(\u5305\u62ec\u4e70\u5165\u548c\u5356\u51fa)\n        profit[0][0], profit[0][1], profit[0][2] = 0, -prices[0], 0\n\n        # \u72b6\u6001\u65b9\u7a0b\n        for i in range(1, len(prices)):\n            profit[i][0] = profit[i-1][0]\n            profit[i][1] = max(profit[i-1][1], profit[i-1][0] - prices[i])\n            profit[i][2] = profit[i-1][1] + prices[i]\n            res = max(res, profit[i][0], profit[i][1], profit[i][2])\n        return res\n    \n    def s2(self, prices):\n        # for \u5faa\u73af\uff0c\u4e0d\u65ad\u4fee\u6b63\u6700\u5c0f\u503c\uff0c\u5f53\u524d\u503c - \u6700\u5c0f\u503c > 0 and > maximum\uff0c\u5219\u66ff\u6362\u6389 maximum \u7684\u503c\uff0c\u5faa\u73af\u7ed3\u675f\uff0c\u5c31\u5f97\u5230\u6700\u5927\u5229\u6da6\n        if not prices: return 0\n        minimum = prices[0]\n        maximum = 0\n        for i in prices:\n            if i < minimum:\n                minimum = i\n            if i - minimum > 0 and i - minimum > maximum:\n                maximum = i - minimum\n        return maximum\n\n    # \u66b4\u529b\u6cd5\uff1atimeout\n    def s1(self, prices):\n        if not prices: return 0\n        maximum = 0\n        for i in range(len(prices) - 1):\n            for j in range(i + 1, len(prices)):\n                profit = prices[j] - prices[i]\n                if profit > 0 and profit > maximum:\n                    maximum = profit\n        return maximum\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-42-\u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 42. \u8fde\u7eed\u5b50\u6570\u7ec4\u7684\u6700\u5927\u548c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def maxSubArray(self, nums: List[int]) -> int:\n        # \u9012\u5f52\u7ec8\u6b62\u6761\u4ef6\n        if len(nums) == 1:\n            return nums[0]\n        \n        # \u5206\u89e3\u95ee\u9898\uff0c\u5c06\u6570\u7ec4\u5212\u5206\u4e3a\u4e24\u90e8\u5206\n        mid = len(nums) // 2\n        left_nums = nums[:mid]\n        right_nums = nums[mid:]\n        \n        # \u9012\u5f52\u6c42\u89e3\u5de6\u53f3\u4e24\u90e8\u5206\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\n        left_max = self.maxSubArray(left_nums)\n        right_max = self.maxSubArray(right_nums)\n        \n        # \u8ba1\u7b97\u8de8\u8d8a\u4e2d\u70b9\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\n        cross_max = self.crossMaxSubArray(nums, mid)\n        \n        # \u8fd4\u56de\u4e09\u8005\u4e2d\u7684\u6700\u5927\u503c\u4f5c\u4e3a\u6700\u7ec8\u7ed3\u679c\n        return max(left_max, right_max, cross_max)\n    \n    def crossMaxSubArray(self, nums, mid):\n        # \u4ece\u4e2d\u70b9\u5411\u5de6\u6269\u5c55\u6c42\u53d6\u5de6\u534a\u90e8\u5206\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\n        left_sum = float('-inf')\n        cur_sum = 0\n        for i in range(mid-1, -1, -1):\n            cur_sum += nums[i]\n            left_sum = max(left_sum, cur_sum)\n        \n        # \u4ece\u4e2d\u70b9\u5411\u53f3\u6269\u5c55\u6c42\u53d6\u53f3\u534a\u90e8\u5206\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\n        right_sum = float('-inf')\n        cur_sum = 0\n        for i in range(mid, len(nums)):\n            cur_sum += nums[i]\n            right_sum = max(right_sum, cur_sum)\n            \n        # \u8fd4\u56de\u5de6\u53f3\u4e24\u90e8\u5206\u7684\u6700\u5927\u5b50\u6570\u7ec4\u548c\u4e4b\u548c\n        return left_sum + right_sum\n\n    def _dp2(self, nums):\n        if not nums: return 0\n\n        dp = [0] * len(nums)\n        dp[0] = nums[0]\n\n        for i in range(1, len(nums)):\n            # i-1 \u548c\u5927\u4e8e0\uff0c\u8bf4\u660e\u6709\u589e\u76ca\u6548\u679c\n            if dp[i-1] > 0:\n                dp[i] = dp[i-1] + nums[i]\n            else:\n                dp[i] = nums[i]\n        return max(dp)\n    \n    def _dp1(self, nums):\n        if not nums: return 0\n\n        # \u7ed3\u679c\u5b58\u50a8\n        dp = [0] * len(nums)\n        # DP \u72b6\u6001\u521d\u59cb\u5316\n        dp[0] = nums[0]\n\n        for i in range(1, len(nums)):\n            # DP \u65b9\u7a0b\n            dp[i] = max(dp[i-1] + nums[i], nums[i])\n        return max(dp)\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-47-\u793c\u7269\u7684\u6700\u5927\u4ef7\u503c"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/li-wu-de-zui-da-jie-zhi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 47. \u793c\u7269\u7684\u6700\u5927\u4ef7\u503c")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def maxValue(self, grid: List[List[int]]) -> int:\n        if not grid[0]: return 0\n        m, n = len(grid), len(grid[0])\n        dp = [[0] * n for _ in range(m)]\n\n        # \u521d\u59cb\u5316\u7b2c\u4e00\u884c\u548c\u7b2c\u4e00\u5217\u7684\u6700\u5927\u503c\n        dp[0][0] = grid[0][0]\n        for i in range(1, n):\n            dp[0][i] = dp[0][i - 1] + grid[0][i]\n        for j in range(1, m):\n            dp[j][0] = dp[j - 1][0] + grid[j][0]\n        \n        # DP \u65b9\u7a0b\uff1a\u9012\u63a8\u8ba1\u7b97\u6bcf\u4e2a\u683c\u5b50\u7684\u6700\u5927\u4ef7\u503c\n        for i in range(1, m):\n            for j in range(1, n):\n                dp[i][j] = max(dp[i-1][j], dp[i][j-1]) + grid[i][j]\n        return dp[m-1][n-1]\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-46-\u628a\u6570\u5b57\u7ffb\u8bd1\u6210\u5b57\u7b26\u4e32"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/ba-shu-zi-fan-yi-cheng-zi-fu-chuan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 46. \u628a\u6570\u5b57\u7ffb\u8bd1\u6210\u5b57\u7b26\u4e32")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def translateNum(self, num: int) -> int:\n        if num <= 9: return 1\n        # 0 - 9\uff1a\u6709\u4e00\u79cd\u7ffb\u8bd1\u65b9\u6cd5\n        # 10-25: \u6709\u4e24\u79cd\u7ffb\u8bd1\u65b9\u6cd5\n        num_str = str(num)\n        n = len(num_str)\n\n        # \u521b\u5efa\u4e00\u4e2a\u957f\u5ea6\u4e3a n+1 \u7684\u6570\u7ec4 dp\uff0c\u7528\u4e8e\u4fdd\u5b58\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7ffb\u8bd1\u65b9\u6848\u6570\n        dp = [0] * (n+1)\n\n        # \u521d\u59cb\u5316\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u7ffb\u8bd1\u65b9\u6848\u6570\u4e3a 1\n        dp[0] = 1\n\n        # \u9012\u63a8\u8ba1\u7b97\u6bcf\u4e2a\u4f4d\u7f6e\u7684\u7ffb\u8bd1\u6570\n        for i in range(1, n + 1):\n            # \u4e24\u4f4d\u6570\u5b57\u7ffb\u8bd1 -> 1 \u4e2a\u5b57\u6bcd\n            if i > 1 and '10' <= num_str[i-2:i] <= '25':\n                dp[i] = dp[i-1] + dp[i-2]\n            else:\n                dp[i] = dp[i-1]\n        \n        # \u8fd4\u56de\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u7ffb\u8bd1\u65b9\u6848\u6570\n        return dp[n]\n\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-48-\u6700\u957f\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u5b50\u5b57\u7b26\u4e32"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/zui-chang-bu-han-zhong-fu-zi-fu-de-zi-zi-fu-chuan-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 48. \u6700\u957f\u4e0d\u542b\u91cd\u590d\u5b57\u7b26\u7684\u5b50\u5b57\u7b26\u4e32")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def lengthOfLongestSubstring(self, s: str) -> int:\n        # \u54c8\u5e0c\u8868\u8bb0\u5f55\u5b57\u7b26\u548c\u5b57\u7b26\u6700\u8fd1\u51fa\u73b0\u7684\u4f4d\u7f6e\n        char_dict = {} \n        left = 0 # \u6ed1\u52a8\u7a97\u53e3\u5de6\u8fb9\u754c\n        max_length = 0 # \u5b57\u7b26\u4e32\u6700\u5927\u957f\u5ea6\n\n        for right in range(len(s)):\n            if s[right] in char_dict and char_dict[s[right]] >= left:\n                 # \u5f53\u524d\u5b57\u7b26\u91cd\u590d\u4e86\uff0c\u66f4\u65b0\u5de6\u8fb9\u754c\u4e3a\u91cd\u590d\u5b57\u7b26\u7684\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\n                left = char_dict[s[right]] + 1\n\n            # \u66f4\u65b0\u5b57\u7b26\u4e32\u5728\u54c8\u5e0c\u8868\u4e2d\u7684\u4f4d\u7f6e\n            char_dict[s[right]] = right\n\n            # \u8ba1\u7b97\u5f53\u524d\u6ed1\u52a8\u7a97\u53e3\u7684\u957f\u5ea6\n            current_length = right - left + 1\n\n            # \u66f4\u65b0\u6700\u957f\u5b50\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\n            max_length = max(max_length, current_length)\n\n        return max_length\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-19-\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/zheng-ze-biao-da-shi-pi-pei-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 19. \u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def isMatch(self, s: str, p: str) -> bool:\n        m, n = len(s), len(p)\n\n        def matches(i: int, j: int) -> bool:\n            if i == 0:\n                return False\n            if p[j - 1] == '.':\n                return True\n            return s[i - 1] == p[j - 1]\n\n        f = [[False] * (n + 1) for _ in range(m + 1)]\n        f[0][0] = True\n        for i in range(m + 1):\n            for j in range(1, n + 1):\n                if p[j - 1] == '*':\n                    f[i][j] |= f[i][j - 2]\n                    if matches(i, j - 1):\n                        f[i][j] |= f[i - 1][j]\n                else:\n                    if matches(i, j):\n                        f[i][j] |= f[i - 1][j - 1]\n        return f[m][n]\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-49-\u4e11\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/chou-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 49. \u4e11\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def nthUglyNumber(self, n: int) -> int:\n        ugly = [1] # \u5b58\u50a8\u4e11\u6570\u7684\u6570\u7ec4\n        p2,p3,p5 = 0,0,0  # \u6307\u5411\u4e0b\u4e00\u4e2a\u4e11\u6570\u8981\u4e58\u4ee52\u30013\u30015\u7684\u5143\u7d20\u7684\u7d22\u5f15\n\n        for i in range(1, n):\n            next_ugly2 = ugly[p2] * 2\n            next_ugly3 = ugly[p3] * 3\n            next_ugly5 = ugly[p5] * 5\n\n            next_ugly = min(next_ugly2, next_ugly3, next_ugly5)\n            ugly.append(next_ugly)\n\n            # \u79fb\u52a8\u6307\u9488\n            if next_ugly == next_ugly2:\n                p2 += 1\n            if next_ugly == next_ugly3:\n                p3 += 1\n            if next_ugly == next_ugly5:\n                p5 += 1\n        return ugly[n-1]\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-60-n\u4e2a\u9ab0\u5b50\u7684\u70b9\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/nge-tou-zi-de-dian-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 60. n\u4e2a\u9ab0\u5b50\u7684\u70b9\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def dicesProbability(self, n: int) -> List[float]:\n        dp = [1/6] * 6\n        for i in range(2, n + 1):\n            tmp = [0] * (5 * i + 1)\n            for j in range(len(dp)):\n                for k in range(6):\n                    tmp[j + k] += dp[j]/6\n            dp = tmp\n        return dp\n\n")),(0,l.kt)("h3",{id:"\u4f4d\u8fd0\u7b97-1"},"\u4f4d\u8fd0\u7b97"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-15-\u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/er-jin-zhi-zhong-1de-ge-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 15. \u4e8c\u8fdb\u5236\u4e2d1\u7684\u4e2a\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def hammingWeight(self, n: int) -> int:\n        res = 0\n        while n:\n            res += n & 1\n            n >>= 1\n        return res\n    \n    def s1(self, n):\n        rst = 0\n        mask = 1\n        for i in range(32):\n            if n & mask:\n                rst += 1\n            mask = mask << 1\n            print(mask)\n        return rst\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-65-\u4e0d\u7528\u52a0\u51cf\u4e58\u9664\u505a\u52a0\u6cd5"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/bu-yong-jia-jian-cheng-chu-zuo-jia-fa-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 65. \u4e0d\u7528\u52a0\u51cf\u4e58\u9664\u505a\u52a0\u6cd5")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def add(self, a: int, b: int) -> int:\n        if b == 0: return a\n        return add(a ^ b, ((a & b) << 1))\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-56---i-\u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 56 - I. \u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def singleNumbers(self, nums: List[int]) -> List[int]:\n        nums_dict = {}\n        for i in nums:\n            if i in nums_dict:\n                nums_dict[i] += 1\n            else:\n                nums_dict[i] = 1\n        res = []\n        for key,value in nums_dict.items():\n            if value == 1:\n                res.append(key)\n        return res\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-56---ii-\u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570-ii"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shu-zu-zhong-shu-zi-chu-xian-de-ci-shu-ii-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 56 - II. \u6570\u7ec4\u4e2d\u6570\u5b57\u51fa\u73b0\u7684\u6b21\u6570 II")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def singleNumber(self, nums: List[int]) -> int:\n        count = [0] * 32\n        res = 0 \n\n        for num in nums:\n            mask = 1\n            for i in range(32):\n                if num & mask:\n                    count[i] += 1\n                mask <<= 1\n        \n        for i in range(32):\n            if count[i]%3 != 0:\n                res |= (1 << i)\n\n        return res\n")),(0,l.kt)("h3",{id:"\u6570\u5b66-1"},"\u6570\u5b66"),(0,l.kt)("h4",{id:"\u5251\u6307-offer-39-\u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shu-zu-zhong-chu-xian-ci-shu-chao-guo-yi-ban-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 39. \u6570\u7ec4\u4e2d\u51fa\u73b0\u6b21\u6570\u8d85\u8fc7\u4e00\u534a\u7684\u6570\u5b57")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def majorityElement(self, nums: List[int]) -> int:\n        # \u6392\u5e8f\n        nums.sort()\n        return nums[len(nums)//2]\n\n    # \u54c8\u5e0c\u7edf\u8ba1 \n    def s1(sefl, nums):\n        if not nums: return 0\n        dic = {}\n\n        res = 0\n        for i in nums:\n            if i in dic:\n                dic[i] += 1\n            else:\n                dic[i] = 1\n        for key,value in dic.items():\n            if value > len(nums)//2:\n                return key\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-66-\u6784\u5efa\u4e58\u79ef\u6570\u7ec4"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/gou-jian-cheng-ji-shu-zu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 66. \u6784\u5efa\u4e58\u79ef\u6570\u7ec4")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def constructArr(self, a: List[int]) -> List[int]:\n        # \u7ed3\u679c\u96c6\u4e2d\u4efb\u4f55\u4e00\u4e2a\u5143\u7d20 = \u5176\u5de6\u8fb9\u6240\u6709\u5143\u7d20\u7684\u4e58\u79ef * \u5176\u53f3\u8fb9\u6240\u6709\u5143\u7d20\u7684\u4e58\u79ef\u3002\u4e00\u8f6e\u5faa\u73af\u6784\u5efa\u5de6\u8fb9\u7684\u4e58\u79ef\u5e76\u4fdd\u5b58\u5728\u7ed3\u679c\u96c6\u4e2d\uff0c\n        # \u4e8c\u8f6e\u5faa\u73af \u6784\u5efa\u53f3\u8fb9\u4e58\u79ef\u7684\u8fc7\u7a0b\uff0c\u4e58\u4ee5\u5de6\u8fb9\u7684\u4e58\u79ef\uff0c\u5e76\u5c06\u6700\u7ec8\u7ed3\u679c\u4fdd\u5b58\n        return self.s1(a)\n    \n    def s1(seflf, a):\n        b, tmp = [1] * len(a), 1\n        for i in range(1, len(a)):\n            b[i] = b[i - 1] * a[i - 1] # \u4e0b\u4e09\u89d2\n        for i in range(len(a) - 2, -1, -1):\n            tmp *= a[i + 1]            # \u4e0a\u4e09\u89d2\n            b[i] *= tmp                # \u4e0b\u4e09\u89d2 * \u4e0a\u4e09\u89d2\n        return b\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-14--i-\u526a\u7ef3\u5b50"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/jian-sheng-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 14- I. \u526a\u7ef3\u5b50")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def cuttingRope(self, n: int) -> int:\n        dp = [0] * (n + 1)\n        for i in range(2, n+1):\n            for j in range(i):\n                dp[i] = max(dp[i], j* (i-j), j * dp[i-j])\n        return dp[n]\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-14--ii-\u526a\u7ef3\u5b50-ii"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/jian-sheng-zi-ii-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 14- II. \u526a\u7ef3\u5b50 II")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def cuttingRope(self, n: int) -> int:\n        dp = [0] * (n + 1)\n        \n        # n >= 2\n        for i in range(2, n + 1):\n            for j in range(i):\n                dp[i] = max(dp[i], j * (i-j), j * dp[i-j])\n                \n        return dp[n]%1000000007\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-57---ii-\u548c\u4e3as\u7684\u8fde\u7eed\u6b63\u6570\u5e8f\u5217"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/he-wei-sde-lian-xu-zheng-shu-xu-lie-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 57 - II. \u548c\u4e3as\u7684\u8fde\u7eed\u6b63\u6570\u5e8f\u5217")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def findContinuousSequence(self, target: int) -> List[List[int]]:\n        i = 1 \n        j = 1\n        sum = 0\n        res = []\n        while i <= target//2:\n            if sum < target:\n                sum += j\n                j += 1\n            elif sum > target:\n                sum -= i\n                i += 1\n            else:\n                arr = list(range(i,j))\n                res.append(arr)\n                sum -= i\n                i += 1\n        return res\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-62-\u5706\u5708\u4e2d\u6700\u540e\u5269\u4e0b\u7684\u6570\u5b57"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/yuan-quan-zhong-zui-hou-sheng-xia-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 62. \u5706\u5708\u4e2d\u6700\u540e\u5269\u4e0b\u7684\u6570\u5b57")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def lastRemaining(self, n: int, m: int) -> int:\n        f = 0\n        for i in range(2, n + 1):\n             f = (m + f) % i\n        return f\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-43-1n-\u6574\u6570\u4e2d-1-\u51fa\u73b0\u7684\u6b21\u6570"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/1nzheng-shu-zhong-1chu-xian-de-ci-shu-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 43. 1\uff5en \u6574\u6570\u4e2d 1 \u51fa\u73b0\u7684\u6b21\u6570")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def countDigitOne(self, n: int) -> int:\n        digit, res = 1, 0\n        high, cur, low = n // 10, n % 10, 0\n        while high != 0 or cur != 0:\n            if cur == 0: res += high * digit\n            elif cur == 1: res += high * digit + low + 1\n            else: res += (high + 1) * digit\n            low += cur * digit\n            cur = high % 10\n            high //= 10\n            digit *= 10\n        return res\n")),(0,l.kt)("h4",{id:"\u5251\u6307-offer-44-\u6570\u5b57\u5e8f\u5217\u4e2d\u67d0\u4e00\u4f4d\u7684\u6570\u5b57"},(0,l.kt)("a",{parentName:"h4",href:"https://leetcode.cn/problems/shu-zi-xu-lie-zhong-mou-yi-wei-de-shu-zi-lcof/?envType=study-plan-v2&envId=coding-interviews"},"\u5251\u6307 Offer 44. \u6570\u5b57\u5e8f\u5217\u4e2d\u67d0\u4e00\u4f4d\u7684\u6570\u5b57")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Solution:\n    def findNthDigit(self, n: int) -> int:\n        digit = 1  # \u6570\u4f4d\n        count = 9  # \u6570\u4f4d\u8303\u56f4\u5185\u7684\u6570\u5b57\u4e2a\u6570\n        start = 1  # \u6570\u4f4d\u8303\u56f4\u7684\u8d77\u59cb\u6570\u5b57\n\n        # \u786e\u5b9a\u76ee\u6807\u6570\u5b57\u6240\u5728\u7684\u6570\u4f4d\u8303\u56f4\n        while n > count * digit:\n            n -= count * digit\n            digit += 1\n            count *= 10\n            start *= 10\n\n        # \u786e\u5b9a\u76ee\u6807\u6570\u5b57\n        num = start + (n - 1) // digit\n\n        # \u786e\u5b9a\u76ee\u6807\u6570\u5b57\u4e2d\u7684\u5177\u4f53\u6570\u5b57\n        return int(str(num)[(n - 1) % digit])\n")))}u.isMDXComponent=!0}}]);
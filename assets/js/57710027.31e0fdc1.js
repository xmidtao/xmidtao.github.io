"use strict";(self.webpackChunkagile_docs=self.webpackChunkagile_docs||[]).push([[1917],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),p=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(d.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,d=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),c=p(n),m=r,k=c["".concat(d,".").concat(m)]||c[m]||s[m]||l;return n?a.createElement(k,i(i({ref:t},u),{},{components:n})):a.createElement(k,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=c;var o={};for(var d in t)hasOwnProperty.call(t,d)&&(o[d]=t[d]);o.originalType=e,o.mdxType="string"==typeof e?e:r,i[1]=o;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},9559:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return d},metadata:function(){return p},toc:function(){return u},default:function(){return c}});var a=n(3117),r=n(102),l=(n(7294),n(3905)),i=["components"],o={id:"interfaces",title:"Interfaces",sidebar_label:"INTERFACES",slug:"/interfaces"},d=void 0,p={unversionedId:"interfaces",id:"interfaces",title:"Interfaces",description:"This Section might be useless to you without any context.",source:"@site/docs/Interfaces.md",sourceDirName:".",slug:"/interfaces",permalink:"/docs/interfaces",editUrl:"https://github.com/xmidtao/documentation/tree/main/docs/Interfaces.md",tags:[],version:"current",lastUpdatedAt:1689702448,formattedLastUpdatedAt:"7/18/2023",frontMatter:{id:"interfaces",title:"Interfaces",sidebar_label:"INTERFACES",slug:"/interfaces"},sidebar:"docs",previous:{title:"Vue",permalink:"/docs/examples/vue"}},u=[{value:"<code>StateIngestConfig</code>",id:"stateingestconfig",children:[{value:"<code>key</code>",id:"key",children:[],level:4}],level:2},{value:"<code>StateRuntimeJobConfig</code>",id:"stateruntimejobconfig",children:[{value:"<code>overwrite</code>",id:"overwrite",children:[],level:4},{value:"<code>storage</code>",id:"storage",children:[],level:4}],level:2},{value:"<code>RuntimeJobConfigInterface</code>",id:"runtimejobconfiginterface",children:[{value:"<code>background</code>",id:"background",children:[],level:4},{value:"<code>sideEffects</code>",id:"sideeffects",children:[],level:4},{value:"<code>force</code>",id:"force",children:[],level:4},{value:"<code>numberOfTriesToUpdate</code>",id:"numberoftriestoupdate",children:[],level:4}],level:2},{value:"<code>IngestConfigInterface</code>",id:"ingestconfiginterface",children:[{value:"<code>perform</code>",id:"perform",children:[],level:4}],level:2},{value:"<code>PatchConfig</code>",id:"patchconfig",children:[{value:"<code>addNewProperties</code>",id:"addnewproperties",children:[],level:4}],level:2},{value:"<code>StatePersistentConfig</code>",id:"statepersistentconfig",children:[{value:"<code>loadValue</code>",id:"loadvalue",children:[],level:4},{value:"<code>storageKeys</code>",id:"storagekeys",children:[],level:4}],level:2},{value:"<code>GroupConfig</code>",id:"groupconfig",children:[{value:"<code>key</code>",id:"key-1",children:[],level:4},{value:"<code>isPlaceholder</code>",id:"isplaceholder",children:[],level:4}],level:2},{value:"<code>SelectorConfig</code>",id:"selectorconfig",children:[{value:"<code>key</code>",id:"key-2",children:[],level:4},{value:"<code>isPlaceholder</code>",id:"isplaceholder-1",children:[],level:4}],level:2},{value:"<code>CollectConfig</code>",id:"collectconfig",children:[{value:"<code>patch</code>",id:"patch",children:[],level:4},{value:"<code>method</code>",id:"method",children:[{value:"<code>push</code>",id:"push",children:[],level:5},{value:"<code>unshift</code>",id:"unshift",children:[],level:5}],level:4},{value:"<code>forEachItem</code>",id:"foreachitem",children:[],level:4},{value:"<code>background</code>",id:"background-1",children:[],level:4},{value:"<code>select</code>",id:"select",children:[],level:4}],level:2},{value:"<code>UpdateConfig</code>",id:"updateconfig",children:[{value:"<code>patch</code>",id:"patch-1",children:[],level:4},{value:"<code>background</code>",id:"background-2",children:[],level:4}],level:2},{value:"<code>HasConfig</code>",id:"hasconfig",children:[{value:"<code>notExisting</code>",id:"notexisting",children:[],level:4}],level:2},{value:"<code>AddSideEffectConfig</code>",id:"addsideeffectconfig",children:[{value:"<code>weight</code>",id:"weight",children:[],level:4}],level:2},{value:"<code>GroupAddConfig</code>",id:"groupaddconfig",children:[{value:"<code>method</code>",id:"method-1",children:[{value:"<code>push</code>",id:"push-1",children:[],level:5},{value:"<code>unshift</code>",id:"unshift-1",children:[],level:5}],level:4},{value:"<code>overwrite</code>",id:"overwrite-1",children:[],level:4}],level:2},{value:"<code>UpdateItemKeyConfig</code>",id:"updateitemkeyconfig",children:[{value:"<code>background</code>",id:"background-3",children:[],level:4}],level:2},{value:"<code>ComputeConfig</code>",id:"computeconfig",children:[{value:"<code>autodetect</code>",id:"autodetect",children:[],level:4}],level:2},{value:"<code>RecomputeConfig</code>",id:"recomputeconfig",children:[],level:2},{value:"<code>UpdateComputeFunctionConfig</code>",id:"updatecomputefunctionconfig",children:[{value:"<code>overwriteDeps</code>",id:"overwritedeps",children:[],level:4}],level:2},{value:"<code>AgileHookConfigInterface</code>",id:"agilehookconfiginterface",children:[{value:"<code>key</code>",id:"key-3",children:[],level:4},{value:"<code>agileInstance</code>",id:"agileinstance",children:[],level:4},{value:"<code>proxyBased</code>",id:"proxybased",children:[],level:4},{value:"<code>selector</code>",id:"selector",children:[],level:4},{value:"<code>componentId</code>",id:"componentid",children:[],level:4},{value:"<code>observerType</code>",id:"observertype",children:[],level:4},{value:"<code>deps</code>",id:"deps",children:[],level:4}],level:2}],s={toc:u};function c(e){var t=e.components,n=(0,r.Z)(e,i);return(0,l.kt)("wrapper",(0,a.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},"\u2757\ufe0f"),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},(0,l.kt)("strong",{parentName:"p"},"This Section might be useless to you without any context."),"\nAs the name suggests, it's all about typescript interfaces of AgileTs.\nThese interfaces are outsourced for a better overview, maintainability, and reusability.\nYou might get redirected to parts of the Interface Section from other documentation to learn more about specific Interfaces."))),(0,l.kt)("h2",{id:"stateingestconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"StateIngestConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"StateIngestConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/state/methods#set"},(0,l.kt)("inlineCode",{parentName:"a"},"set()"))," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/state/methods#undo"},(0,l.kt)("inlineCode",{parentName:"a"},"undo()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface StateIngestConfigInterface\n        extends StateRuntimeJobConfigInterface,\n                IngestConfigInterface {\n   key?: RuntimeJobKey;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," The ",(0,l.kt)("inlineCode",{parentName:"p"},"StateIngestConfigInterface")," extends some other Interfaces:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#stateruntimejobconfig"},"StateRuntimeJobConfigInterface")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#ingestconfiginterface"},"IngestConfigInterface"))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"key"},(0,l.kt)("inlineCode",{parentName:"h4"},"key")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"key/name")," of the Job that is created and ingested into the ",(0,l.kt)("inlineCode",{parentName:"p"},"runtime"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"MY_STATE.set('hello there', {key: 'jeff'});\n")),(0,l.kt)("p",null,"Such key can be very useful during debug sessions\nin order to analyse when which Job ran through the ",(0,l.kt)("inlineCode",{parentName:"p"},"runtime"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// Agile Debug: Created Job 'jeff', Job('jeff')\n// Agile Debug: Completed Job 'jeff', Job('jeff')\n// Agile Debug: Updated/Rerendered Subscriptions, [SubscriptionContainer, ..]\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string \\| number")),(0,l.kt)("td",{parentName:"tr",align:null},"undefined"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"stateruntimejobconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"StateRuntimeJobConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"StateRuntimeJobConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/group/methods#replace"},(0,l.kt)("inlineCode",{parentName:"a"},"replace()"))," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/selector/methods#select"},(0,l.kt)("inlineCode",{parentName:"a"},"select()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface StateRuntimeJobConfigInterface\n  extends RuntimeJobConfigInterface {\n  overwrite?: boolean;\n  storage?: boolean;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," The ",(0,l.kt)("inlineCode",{parentName:"p"},"StateRuntimeJobConfigInterface")," extends some other Interfaces:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#runtimejobconfiginterface"},"RuntimeJobConfigInterface"))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"overwrite"},(0,l.kt)("inlineCode",{parentName:"h4"},"overwrite")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the whole State is overwritten with the newly assigned ",(0,l.kt)("inlineCode",{parentName:"p"},"value"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{1}","{1}":!0},"MY_STATE.set(\"finalValue\", {overwrite: true});\nMY_STATE.value; // Returns 'finalValue'\nMY_STATE.previousStateValue; // Returns 'finalValue'\nMY_STATE.initialStateValue; // Returns 'finalValue'\n")),(0,l.kt)("p",null,"During the overwrite process, the following properties are overwritten:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"value")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"previousStateValue")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"initalStateValue")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"isPlaceholder"))),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"storage"},(0,l.kt)("inlineCode",{parentName:"h4"},"storage")),(0,l.kt)("p",null,"Whether to apply the State value changes to the corresponding external ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/storage"},"Storage/s"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{1}","{1}":!0},"const MY_STATE = createState('jeff').persist('storageKey');\n// Storage at 'storageKey': 'jeff'\nMY_STATE.set(\"hans\", {storage: true});\n// Storage at 'storageKey': 'hans'\nMY_STATE.set(\"dieter\", {storage: false});\n// Storage at 'storageKey': 'hans'\n")),(0,l.kt)("p",null,"Be aware that this is only relevant, if the State is ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/state/methods#persist"},"persisted"),".\nWe can use the ",(0,l.kt)("inlineCode",{parentName:"p"},"isPersisted")," property to check whether a state is persisted."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"MY_STATE.isPersisted;\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"runtimejobconfiginterface"},(0,l.kt)("inlineCode",{parentName:"h2"},"RuntimeJobConfigInterface")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"RuntimeJobConfigInterface")," is used in the creation and configuration of a ",(0,l.kt)("inlineCode",{parentName:"p"},"Runtime Job"),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface RuntimeJobConfigInterface {\n  background?: boolean;\n  sideEffects?: SideEffectConfigInterface;\n  force?: boolean;\n  numberOfTriesToUpdate?: number | null;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"background"},(0,l.kt)("inlineCode",{parentName:"h4"},"background")),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the Job is executed in the ",(0,l.kt)("inlineCode",{parentName:"p"},"background"),"\nand won't cause any rerender on Components that have subscribed the ",(0,l.kt)("a",{parentName:"p",href:"/docs/introduction#agile-sub-instance"},"Agile Sub Instance"),"\nrepresented by the Job."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},'// Causes rerender on Components\nMY_STATE.set("myNewValue2");\n  \n// Doesn\'t cause rerender on Components\nMY_STATE.set("myNewValue3", {background: true});\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"sideeffects"},(0,l.kt)("inlineCode",{parentName:"h4"},"sideEffects")),(0,l.kt)("p",null,"Specifies whether the side effects of the Job should be executed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},'// Executes sideEffects\nMY_STATE.set("myNewValue2");\n  \n// Doesn\'t execute sideEffects\nMY_STATE.set("myNewValue3", {sideEffects: false});\n')),(0,l.kt)("p",null,"During a side effect, several essential tasks are done.\nThese include, for example, ",(0,l.kt)("em",{parentName:"p"},"rebuilding the Group output")," of a Group\nor ",(0,l.kt)("em",{parentName:"p"},"updating the persisted State value in the corresponding external Storage"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"force"},(0,l.kt)("inlineCode",{parentName:"h4"},"force")),(0,l.kt)("p",null,"When set to ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the Job is forced through the ",(0,l.kt)("inlineCode",{parentName:"p"},"runtime")," no matter what happens."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{7}","{7}":!0},"const MY_STATE = createState('myValue');\n\n// Won't be executed by the runtime because the State value hasn't changed\nMY_STATE.set('myValue');\n  \n// Will be executed by the runtime, although the State value hasn't changed\nMY_STATE.set('myValue', { force: true });\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("h4",{id:"numberoftriestoupdate"},(0,l.kt)("inlineCode",{parentName:"h4"},"numberOfTriesToUpdate")),(0,l.kt)("p",null,"How often the runtime should try to update not ready SubscriptionContainers of the Job.\nIf the update tries count exceeds the ",(0,l.kt)("inlineCode",{parentName:"p"},"numberOfTriesToUpdate")," count,\nthe Job will be entirely removed from the runtime.\nThis has the advantage that an overflow of the runtime is avoided.\nIf ",(0,l.kt)("inlineCode",{parentName:"p"},"numberOfTriesToUpdate")," is ",(0,l.kt)("inlineCode",{parentName:"p"},"null")," the runtime tries to update the not ready Job subscriptionContainers\nuntil they are ready."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"number \\| null")),(0,l.kt)("td",{parentName:"tr",align:null},"3"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"ingestconfiginterface"},(0,l.kt)("inlineCode",{parentName:"h2"},"IngestConfigInterface")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"IngestConfigInterface")," is used as a configuration object to configure the ingest process of ",(0,l.kt)("inlineCode",{parentName:"p"},"Jobs")," into the ",(0,l.kt)("inlineCode",{parentName:"p"},"runtime"),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface IngestConfigInterface {\n  perform?: boolean;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"perform"},(0,l.kt)("inlineCode",{parentName:"h4"},"perform")),(0,l.kt)("p",null,"Whether the ingested Job should be executed immediately by the ",(0,l.kt)("inlineCode",{parentName:"p"},"runtime"),"\nor should first be inserted into a ",(0,l.kt)("inlineCode",{parentName:"p"},"queue")," and performed when it is its turn."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"patchconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"PatchConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"PatchConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/state/methods#persist"},(0,l.kt)("inlineCode",{parentName:"a"},"patch()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface PatchConfigInterface extends StateIngestConfigInterface {\n  addNewProperties?: boolean;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," The ",(0,l.kt)("inlineCode",{parentName:"p"},"PatchConfigInterface")," extends some other Interfaces:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#stateingestconfig"},"StateIngestConfigInterface"))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"addnewproperties"},(0,l.kt)("inlineCode",{parentName:"h4"},"addNewProperties")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", new properties are added to the State value, although they might not yet be present there."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2,4}","{2,4}":!0},'const MY_STATE = createState({id: 1, name: "frank"});\nMY_STATE.patch({location: "Germany"}, {addNewProperties: false}); \nMY_STATE.value; // Returns {id: 1, name: "frank"}\nMY_STATE.patch({location: "Germany"}, {addNewProperties: true});\nMY_STATE.value; // Returns {id: 1, name: "frank", location: "Germany"}\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"statepersistentconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"StatePersistentConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"StatePersistentConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/state/methods#persist"},(0,l.kt)("inlineCode",{parentName:"a"},"persist()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface StatePersistentConfigInterface {\n   key?: string | number; \n   loadValue?: boolean;\n   storageKeys?: StorageKey[];\n   onMigrate?: (value: any) => ValueType;\n   onSave?: (value: ValueType) => any;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"loadvalue"},(0,l.kt)("inlineCode",{parentName:"h4"},"loadValue")),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the created ",(0,l.kt)("inlineCode",{parentName:"p"},"Persistent")," automatically loads the value stored in the corresponding external Storage into the State.\nOr, if the State isn't persisted yet, it stores the State value in the corresponding external Storage.\nBe aware that if we don't allow the ",(0,l.kt)("inlineCode",{parentName:"p"},"Persistent")," to load/store the value, we have to do it ourselves."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2}","{2}":!0},"myState.persist({\n    loadValue: false,\n});\n\nif (myState.persistent?.ready) {\n   await myState.persistent?.initialLoading();\n   myState.isPersisted = true;\n}\n")),(0,l.kt)("p",null,"Loading the value manually has one advantage.\nIt allows us to await the asynchronous load/store process.\nIf you only need to await the loading process we recommend using the ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/state/methods#onload"},(0,l.kt)("inlineCode",{parentName:"a"},"onLoad()"))," method."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"storagekeys"},(0,l.kt)("inlineCode",{parentName:"h4"},"storageKeys")),(0,l.kt)("p",null,"Specifies the ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/storage"},"Storage/s")," the State value should be persisted in."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"MY_STATE.persist(); // Stores value in default Storage\nMY_STATE.persist({storageKeys: ['myCustomStorrage']}); // Stores value in 'myCustomStorrage'\n")),(0,l.kt)("p",null,"If no specific Storage defined, the State value will be stored/persisted in the ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/persisting-data#-default-storage"},"default Storage"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"Array<string \\| number>")),(0,l.kt)("td",{parentName:"tr",align:null},"'defaultStorage'"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"groupconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"GroupConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"GroupConfigInterface")," is used in the creation and configuration of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/group"},(0,l.kt)("inlineCode",{parentName:"a"},"Group Class")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GroupConfigInterface {\n  key?: GroupKey;\n  isPlaceholder?: boolean;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"key-1"},(0,l.kt)("inlineCode",{parentName:"h4"},"key")),(0,l.kt)("p",null,"The optional property ",(0,l.kt)("inlineCode",{parentName:"p"},"key/name")," should be a unique ",(0,l.kt)("inlineCode",{parentName:"p"},"string/number")," to identify the Group later."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'MY_COLLECTION.createGroup([1, 2, 3], {\n    key: "myKey"\n});\n')),(0,l.kt)("p",null,"We recommend giving each Group a unique ",(0,l.kt)("inlineCode",{parentName:"p"},"key")," since it has only advantages:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"helps us during debug sessions"),(0,l.kt)("li",{parentName:"ul"},"makes it easier to identify the Group"),(0,l.kt)("li",{parentName:"ul"},"no need for separate persist Key")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string \\| name")),(0,l.kt)("td",{parentName:"tr",align:null},"undefined"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"isplaceholder"},(0,l.kt)("inlineCode",{parentName:"h4"},"isPlaceholder")),(0,l.kt)("p",null,"Defines whether the Group is a ",(0,l.kt)("inlineCode",{parentName:"p"},"placeholder"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const MY_GROUP = createGroup([1, 2, 3], {\n    isPlaceholder: true\n});\n\nMY_GROUP.exists(); // false\n")),(0,l.kt)("p",null,"Groups are ",(0,l.kt)("inlineCode",{parentName:"p"},"placeholder")," when AgileTs needs to hold a reference to them,\neven though they aren't instantiated yet.\nThis can be the case if we use the ",(0,l.kt)("inlineCode",{parentName:"p"},"getGroupWithReference()")," method,\nwhich returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"placeholder")," Group if the Group we are looking for doesn't exist yet."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const myGroup = useAgile(MY_COLLECTION.getGroupWithReference("group1")); // Causes rerender if Group got created\nconst myGroup2 = useAgile(MY_COLLECTION.getGroup("group2")); // Doesn\'t causes rerender if Group got created\n')),(0,l.kt)("p",null,"This reference is essential to rerender the Component,\nwhenever the Group got instantiated."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"selectorconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"SelectorConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"SelectorConfigInterface")," is used in the creation and configuration of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/selector"},(0,l.kt)("inlineCode",{parentName:"a"},"Selector Class")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface SelectorConfigInterface {\n  key?: SelectorKey;\n  isPlaceholder?: boolean;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"key-2"},(0,l.kt)("inlineCode",{parentName:"h4"},"key")),(0,l.kt)("p",null,"The optional property ",(0,l.kt)("inlineCode",{parentName:"p"},"key/name")," should be a unique ",(0,l.kt)("inlineCode",{parentName:"p"},"string/number")," to identify the Selector later."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'MY_COLLECTION.createSelector(1, {\n    key: "myKey"\n});\n')),(0,l.kt)("p",null,"We recommend giving each Selector a unique ",(0,l.kt)("inlineCode",{parentName:"p"},"key")," since it has only advantages:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"helps us during debug sessions"),(0,l.kt)("li",{parentName:"ul"},"makes it easier to identify the Selector"),(0,l.kt)("li",{parentName:"ul"},"no need for separate persist Key")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string \\| name")),(0,l.kt)("td",{parentName:"tr",align:null},"undefined"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"isplaceholder-1"},(0,l.kt)("inlineCode",{parentName:"h4"},"isPlaceholder")),(0,l.kt)("p",null,"Defines whether the Selector is a ",(0,l.kt)("inlineCode",{parentName:"p"},"placeholder"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const MY_SELECTOR = MY_COLLECTION.createSelector(1, {\n    isPlaceholder: true\n});\n\nMY_SELECTOR.exists(); // false\n")),(0,l.kt)("p",null,"Selectors are ",(0,l.kt)("inlineCode",{parentName:"p"},"placeholder")," when AgileTs needs to hold a reference to them,\neven though they aren't instantiated yet.\nThis can be the case if we use the ",(0,l.kt)("inlineCode",{parentName:"p"},"getSelectorWithReference()")," method,\nwhich returns a ",(0,l.kt)("inlineCode",{parentName:"p"},"placeholder")," Selector if the Selector we are looking for doesn't exist yet."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},'const mySeleector = useAgile(MY_COLLECTION.getSelectorWithReference("selector1")); // Causes rerender if Selector got created\nconst mySeleector2 = useAgile(MY_COLLECTION.getSelector("selector2")); // Doesn\'t causes rerender if Selector got created\n')),(0,l.kt)("p",null,"This reference is essential to rerender the Component,\nwhenever the Selector got instantiated."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"collectconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"CollectConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"CollectConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/methods#collect"},(0,l.kt)("inlineCode",{parentName:"a"},"collect()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface CollectConfigInterface<DataType = any> {\n  patch?: boolean;\n  method?: 'push' | 'unshift';\n  forEachItem?: (data: DataType, key: ItemKey, index: number) => void;\n  background?: boolean;\n  select?: boolean;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"patch"},(0,l.kt)("inlineCode",{parentName:"h4"},"patch")),(0,l.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},"\u2757\ufe0f"),"info")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"The ",(0,l.kt)("inlineCode",{parentName:"p"},"patch")," property is only relevant to us\nif we collect a data object with an already existing ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey")," in order to update the Item data at that ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey"),"."))),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the passed data object is merged into the found Item data instead of overwriting it entirely."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{6,9}","{6,9}":!0},"const MY_COLLECTION = createCollection({\n    initialData: [{id: 1, name: 'frank', age: 10}]\n});\n\nMY_COLLECTION.collect({id: 1, name: 'hans'}, [], {patch: true});\nMY_COLLECTION.getItemValue(1); // Returns '{id: 1, name: 'hans', age: 10}'\n\nMY_COLLECTION.collect({id: 1, name: 'jeff'}, [], {patch: false});\nMY_COLLECTION.getItemValue(1); // Returns '{id: 1, name: 'frank'}'\n")),(0,l.kt)("p",null,"An alternative to this way of updating already existing Item data is the ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/methods#update"},(0,l.kt)("inlineCode",{parentName:"a"},"update()"))," method."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"method"},(0,l.kt)("inlineCode",{parentName:"h4"},"method")),(0,l.kt)("p",null,"Specifies the way of adding the collected data ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey/s")," to the defined Group/s."),(0,l.kt)("h5",{id:"push"},(0,l.kt)("inlineCode",{parentName:"h5"},"push")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey")," is added to the ",(0,l.kt)("strong",{parentName:"p"},"end")," of the Group value array."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2}","{2}":!0},"MY_COLLECTION.collect({id: 1, name: \"jeff\"}, [], {method: 'push'});\nMY_COLLECTION.getGroup(MY_COLLECTION.config.defaultGroupKey).value; // Returns [5, 6, 0, 1]\n")),(0,l.kt)("h5",{id:"unshift"},(0,l.kt)("inlineCode",{parentName:"h5"},"unshift")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey")," is added to the ",(0,l.kt)("strong",{parentName:"p"},"beginning")," of the Group value array."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2}","{2}":!0},"MY_COLLECTION.collect({id: 8, name: \"jeff\"}, [], {method: 'unshift'});\nMY_COLLECTION.getGroup(MY_COLLECTION.config.defaultGroupKey).value; // Returns [8, 5, 6, 0, 1]\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"push' \\| 'unshift'")),(0,l.kt)("td",{parentName:"tr",align:null},"'push'"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"foreachitem"},(0,l.kt)("inlineCode",{parentName:"h4"},"forEachItem")),(0,l.kt)("p",null,"Callback that is called for each collected data object."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{4-9}","{4-9}":!0},'MY_COLLECTION.collect([\n    {id: 1, name: "jeff"}, \n    {id: 8, name: "frank"}], \n    [],\n    {forEachItem: (data, key, index) => {\n         // Is called with \'data: {id: 1, name: "jeff"}, key: 1, index: 0\'\n         // and   \n         // Is called with \'data: {id: 2, name: "frank"}, key: 8, index: 1\'\n      }\n    });\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"(data: DataType, key: ItemKey, index: number) => void")),(0,l.kt)("td",{parentName:"tr",align:null},"undefined"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"background-1"},(0,l.kt)("inlineCode",{parentName:"h4"},"background")),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the data object/s are collected in ",(0,l.kt)("inlineCode",{parentName:"p"},"background"),"\nand won't cause any rerender on Components that have subscribed the Collection."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},'  // Causes rerender on Components\n  MY_COLLECTION.collect({id: 1, name: "jeff"});\n  \n  // Doesn\'t cause rerender on Components\n  MY_COLLECTION.collect({id: 1, name: "jeff"}, {background: true});\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"select"},(0,l.kt)("inlineCode",{parentName:"h4"},"select")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", a ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/selector"},"Selector")," is created for each collected data object."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{1}","{1}":!0},"MY_COLLECTION.collect({id: 1, name: \"jeff\"}, {select: true});\nMY_COLLECTION.getSelector(1); // Returns Selector at '1'\n")),(0,l.kt)("p",null,"These created Selectors can be identified with the same key used as ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey")," in the collected data object."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"updateconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"UpdateConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"UpdateConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/methods#update"},(0,l.kt)("inlineCode",{parentName:"a"},"update()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface UpdateConfigInterface {\n    patch?: boolean | { addNewProperties?: boolean };\n    background?: boolean;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"patch-1"},(0,l.kt)("inlineCode",{parentName:"h4"},"patch")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"false"),", the passed data object overwrites the entire found Item data instead of merging it into the Item data."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2, 4}","{2,":!0,"4}":!0},'MY_COLLECTION.collect({id: 1, name: "jeff"});\nMY_COLLECTION.update(1, {name: "hans"}, {patch: true}); \nMY_COLLECTION.getItemValue(1); // Returns \'{id: 1, name: "hans"}\'\nMY_COLLECTION.update(1, {name: "frank"}, {patch: false}); \nMY_COLLECTION.getItemValue(1); // Returns \'{name: "frank"}\'\n')),(0,l.kt)("p",null,"Keep in mind that if we decide to overwrite the entire Item data object,\nwe have to redefine the ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey")," in the given data object.\nOtherwise, the ",(0,l.kt)("inlineCode",{parentName:"p"},"primary Key")," gets missing, which can lead to problems."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"background-2"},(0,l.kt)("inlineCode",{parentName:"h4"},"background")),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the Item data object is updated in ",(0,l.kt)("inlineCode",{parentName:"p"},"background"),"\nand won't cause any rerender on Components that have subscribed the Item or Collection."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},'// Causes rerender on Components\nMY_COLLECTION.update(1, {name: "jeff"});\n\n// Doesn\'t cause rerender on Components\nMY_COLLECTION.update(1, {name: "frank"}, {background: true});\n')),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"hasconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"HasConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"HasConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/methods#hasgroup"},(0,l.kt)("inlineCode",{parentName:"a"},"hasGroup()"))," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/methods#hasselector"},(0,l.kt)("inlineCode",{parentName:"a"},"hasSelector()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface HasConfigInterface {\n  notExisting?: boolean;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"notexisting"},(0,l.kt)("inlineCode",{parentName:"h4"},"notExisting")),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", also not officially existing Instances (like ",(0,l.kt)("inlineCode",{parentName:"p"},"placeholder"),") can be found."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2,5}","{2,5}":!0},"// Returns placeholder Group\nMY_COLLECTION.hasGroup('myPlaceholderGroup', {notExisting: true});\n\n// Returns undefined\nMY_COLLECTION.hasGroup('myPlaceholderGroup');\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"addsideeffectconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"AddSideEffectConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"AddSideEffectConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/state/methods#addsideeffect"},(0,l.kt)("inlineCode",{parentName:"a"},"addSideEffect()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface AddSideEffectConfigInterface {\n    weight?: number;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"weight"},(0,l.kt)("inlineCode",{parentName:"h4"},"weight")),(0,l.kt)("p",null,"Defines the ",(0,l.kt)("inlineCode",{parentName:"p"},"weight")," of the ",(0,l.kt)("inlineCode",{parentName:"p"},"sideEffect"),"\nand thus when it is executed."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{3}","{3}":!0},"MY_STATE.addSideEffect('mySideEffect', (state, config) => {\n    // sideEffect callback\n}, {weigth: 10});\n")),(0,l.kt)("p",null,"The higher the ",(0,l.kt)("inlineCode",{parentName:"p"},"weight"),", the earlier the ",(0,l.kt)("inlineCode",{parentName:"p"},"sideEffect")," is performed."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"number")),(0,l.kt)("td",{parentName:"tr",align:null},"10"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"groupaddconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"GroupAddConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"GroupAddConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/methods#put"},(0,l.kt)("inlineCode",{parentName:"a"},"put()"))," or ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/group/methods#add"},(0,l.kt)("inlineCode",{parentName:"a"},"add()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface GroupAddConfig extends StateIngestConfigInterface {\n    method?: 'unshift' | 'push';\n    overwrite?: boolean;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," The ",(0,l.kt)("inlineCode",{parentName:"p"},"GroupAddConfig")," extends some other Interfaces:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#stateingestconfig"},"StateIngestConfigInterface"))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"method-1"},(0,l.kt)("inlineCode",{parentName:"h4"},"method")),(0,l.kt)("p",null,"Specifies the way of adding the collected data ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey/s")," to the defined Group/s."),(0,l.kt)("h5",{id:"push-1"},(0,l.kt)("inlineCode",{parentName:"h5"},"push")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey")," is added to the ",(0,l.kt)("strong",{parentName:"p"},"end")," of the Group value array."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2}","{2}":!0},"MY_COLLECTION.collect({id: 1, name: \"jeff\"}, [], {method: 'push'});\nMY_COLLECTION.getGroup(MY_COLLECTION.config.defaultGroupKey).value; // Returns [5, 6, 0, 1]\n")),(0,l.kt)("h5",{id:"unshift-1"},(0,l.kt)("inlineCode",{parentName:"h5"},"unshift")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"primaryKey")," is added to the ",(0,l.kt)("strong",{parentName:"p"},"beginning")," of the Group value array."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2}","{2}":!0},"MY_COLLECTION.collect({id: 8, name: \"jeff\"}, [], {method: 'unshift'});\nMY_COLLECTION.getGroup(MY_COLLECTION.config.defaultGroupKey).value; // Returns [8, 5, 6, 0, 1]\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"push' \\| 'unshift'")),(0,l.kt)("td",{parentName:"tr",align:null},"'push'"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"overwrite-1"},(0,l.kt)("inlineCode",{parentName:"h4"},"overwrite")),(0,l.kt)("p",null,"If ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the position of the already existing ",(0,l.kt)("inlineCode",{parentName:"p"},"itemKey"),"\ngets overwritten with the new position of the newly added same ",(0,l.kt)("inlineCode",{parentName:"p"},"itemKey"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"const MY_GROUP = MY_COLLECTION.createGroup('group1', [1, 2, 5, 6]);\nMY_GROUP.add(2, {overwrite: true}); // Group value is '[1, 5, 6, 2]'\nMY_GROUP.add(5); // Group value is '[1, 5, 6, 2]'\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"updateitemkeyconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"UpdateItemKeyConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"UpdateItemKeyConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/collection/methods#updateitemkey"},(0,l.kt)("inlineCode",{parentName:"a"},"updateItemKey()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface UpdateItemKeyConfigInterface {\n    background?: boolean;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"background-3"},(0,l.kt)("inlineCode",{parentName:"h4"},"background")),(0,l.kt)("p",null,"When ",(0,l.kt)("inlineCode",{parentName:"p"},"true"),", the ",(0,l.kt)("inlineCode",{parentName:"p"},"itemKey")," is updated in ",(0,l.kt)("inlineCode",{parentName:"p"},"background"),"\nand won't cause any rerender on Components that have subscribed the Item or Collection."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{5}","{5}":!0},"// Causes rerender on Components\nMY_COLLECTION.updateItemKey([1, 3]);\n\n// Doesn't cause rerender on Components\nMY_COLLECTION.updateItemKey([1, 3], {background: true});\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"computeconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"ComputeConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"ComputeConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/computed/methods#compute"},(0,l.kt)("inlineCode",{parentName:"a"},"compute()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface ComputeConfigInterface {\n    autodetect?: boolean;\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"autodetect"},(0,l.kt)("inlineCode",{parentName:"h4"},"autodetect")),(0,l.kt)("p",null,"Tells the ",(0,l.kt)("inlineCode",{parentName:"p"},"Computed Class")," to automatically detect the dependencies (",(0,l.kt)("a",{parentName:"p",href:"/docs/introduction#agile-sub-instance"},"Agile Sub Instances")," used in the ",(0,l.kt)("inlineCode",{parentName:"p"},"computeFunction()"),"."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2,4}","{2,4}":!0},"MY_COMPUTED.computeFunction = () => MY_NAME.value + MY_AGE.value;\nMY_COMPUTED.recompute({autodetect: false});\nMY_COMPUTED.deps; // Returns '[]'\nMY_COMPUTED.recompute({autodetect: true});\nMY_COMPUTED.deps; // Returns '[Obserrver(MY_NAME), Observer(MY_AGE)]'\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"recomputeconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"RecomputeConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"RecomputeConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/computed/methods#recompute"},(0,l.kt)("inlineCode",{parentName:"a"},"recompute()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface RecomputeConfigInterface\n    extends StateIngestConfigInterface,\n        ComputeConfigInterface {}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," The ",(0,l.kt)("inlineCode",{parentName:"p"},"RecomputeConfig")," extends some other Interfaces:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#stateingestconfig"},"StateIngestConfigInterface")),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#computeconfig"},"ComputeConfigInterface"))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"updatecomputefunctionconfig"},(0,l.kt)("inlineCode",{parentName:"h2"},"UpdateComputeFunctionConfig")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"UpdateComputeFunctionConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/computed/methods#updatecomputefunction"},(0,l.kt)("inlineCode",{parentName:"a"},"updateComputeFunction()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"export interface UpdateComputeFunctionConfigInterface\n    extends RecomputeConfigInterface {\n    overwriteDeps?: boolean;\n}\n")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Note:")," The ",(0,l.kt)("inlineCode",{parentName:"p"},"RecomputeConfig")," extends some other Interfaces:"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#recomputeconfig"},"RecomputeConfigInterface"))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"overwritedeps"},(0,l.kt)("inlineCode",{parentName:"h4"},"overwriteDeps")),(0,l.kt)("p",null,"Whether the newly defined hard-coded dependencies are merged into the existing ones or overwrite them entirely."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts",metastring:"{2,4}","{2,4}":!0},"MY_COMPUTED.deps; // // Returns '[Obserrver(MY_NAME), Observer(MY_AGE)]'\nMY_COMPUTED.updateComputeFunction(() => {}, [MY_LOCATION], {overwriteDeps: false});\nMY_COMPUTED.deps; // // Returns '[Obserrver(MY_NAME), Observer(MY_AGE), Observer(MY_LOCATION)]'\nMY_COMPUTED.updateComputeFunction(() => {}, [MY_LOCATION], {overwriteDeps: true});\nMY_COMPUTED.deps; // // Returns '[Observer(MY_LOCATION)]'\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"true"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("hr",null),(0,l.kt)("br",null),(0,l.kt)("h2",{id:"agilehookconfiginterface"},(0,l.kt)("inlineCode",{parentName:"h2"},"AgileHookConfigInterface")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"AgileHookConfigInterface")," is used as configuration object in functions like ",(0,l.kt)("a",{parentName:"p",href:"/docs/react/hooks#useagile"},(0,l.kt)("inlineCode",{parentName:"a"},"useAgile()")),".\nHere is a Typescript Interface for quick reference. However,\neach property is explained in more detail below."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"interface AgileHookConfigInterface {\n  key?: SubscriptionContainerKeyType;\n  agileInstance?: Agile;\n  proxyBased?: boolean;\n  selector?: SelectorMethodType;\n  componentId?: ComponentIdType;\n  observerType?: string;\n  deps?: any[];\n}\n")),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"key-3"},(0,l.kt)("inlineCode",{parentName:"h4"},"key")),(0,l.kt)("p",null,"The ",(0,l.kt)("inlineCode",{parentName:"p"},"key/name")," of the ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/integration#-subscriptions"},"SubscriptionContainer")," that is created and added to the Observers."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"useAgile(MY_STATE, {key: 'jeff'});\n")),(0,l.kt)("p",null,"Such key can be very useful during debug sessions\nin order to analyse when which SubscriptionContainer triggered a rerender on a Component."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"// Agile Debug: Registered Callback/Component based Subscription 'jeff', SubscriptionContainer('jeff')\n// Agile Debug: Updated/Rerendered Subscriptions, [SubscriptionContainer('jeff'), ..]\n// Agile Debug: Unregistered Callback/Component based Subscription 'jeff', SubscriptionContainer('jeff')\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string \\| number")),(0,l.kt)("td",{parentName:"tr",align:null},"undefined"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"agileinstance"},(0,l.kt)("inlineCode",{parentName:"h4"},"agileInstance")),(0,l.kt)("p",null,"The ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/agile-instance"},"Agile Instance")," to which the created ",(0,l.kt)("a",{parentName:"p",href:"/docs/core/integration#-subscriptions"},"SubscriptionContainer")," belongs to.\nHowever, since each Observer has an instance to the Agile Instance, ",(0,l.kt)("inlineCode",{parentName:"p"},"useAgile()")," can automatically derive the Agile Instance from that."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("a",{parentName:"td",href:"/docs/core/agile-instance"},"Agile Instance")),(0,l.kt)("td",{parentName:"tr",align:null},"undefined"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"proxybased"},(0,l.kt)("inlineCode",{parentName:"h4"},"proxyBased")),(0,l.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},"\ud83d\udd25"),"warning")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Requires an additional package called ",(0,l.kt)("inlineCode",{parentName:"p"},"@agile-ts/proxytree"),"!"))),(0,l.kt)("p",null,"Whether to wrap a ",(0,l.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy"},"Proxy"),"\naround the bound Agile Instance value object,\nto automatically constrain the way the selected Agile Instance\nis compared to determine whether the Component needs to be re-rendered\nbased on the object's used properties."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"useProxy(MY_STATE);\n// equal to\nuseAgile(MY_STATE, {proxyBased: true});\n")),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"boolean")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"selector"},(0,l.kt)("inlineCode",{parentName:"h4"},"selector")),(0,l.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},"\ud83d\udd25"),"warning")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Note that setting this property can destroy the useAgile type.\n-> should only be used internal!"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"useSelector(MY_STATE, (v.name) => v.name);\n// equal to\nuseAgile(MY_STATE, {selector: (v.name) => v.name});\n")))),(0,l.kt)("p",null,"Equality comparison function\nthat allows you to customize the way the selected Agile Instance\nis compared to determine whether the Component needs to be re-rendered."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"SelectorMethodType")),(0,l.kt)("td",{parentName:"tr",align:null},"undefined"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"componentid"},(0,l.kt)("inlineCode",{parentName:"h4"},"componentId")),(0,l.kt)("p",null,"Key/Name identifier of the UI-Component the Subscription Container is bound to."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"useAgile(MY_STATE, {componentId: 'User.tsx'});\n")),(0,l.kt)("p",null,"In future re-render events\nwith the same ",(0,l.kt)("inlineCode",{parentName:"p"},"componentId")," are batched,\nin addition to batching re-render events based on the ",(0,l.kt)("inlineCode",{parentName:"p"},"SubscriptionContainer"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string\\|number")),(0,l.kt)("td",{parentName:"tr",align:null},"undefined"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"observertype"},(0,l.kt)("inlineCode",{parentName:"h4"},"observerType")),(0,l.kt)("div",{className:"admonition admonition-warning alert alert--danger"},(0,l.kt)("div",{parentName:"div",className:"admonition-heading"},(0,l.kt)("h5",{parentName:"div"},(0,l.kt)("span",{parentName:"h5",className:"admonition-icon"},"\ud83d\udd25"),"warning")),(0,l.kt)("div",{parentName:"div",className:"admonition-content"},(0,l.kt)("p",{parentName:"div"},"Note that setting this property can destroy the useAgile type.\n-> should only be used internal!"),(0,l.kt)("pre",{parentName:"div"},(0,l.kt)("code",{parentName:"pre",className:"language-ts"},"useOutput(MY_STATE);\n// equal to\nuseAgile(MY_STATE, {observerType: 'output'});\n\nuseValue(MY_STATE);\n// equal to\nuseAgile(MY_STATE, {observerType: 'value'});\n")))),(0,l.kt)("p",null,"What type of Observer to be bound to the UI-Component."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"string")),(0,l.kt)("td",{parentName:"tr",align:null},"false"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))),(0,l.kt)("br",null),(0,l.kt)("h4",{id:"deps"},(0,l.kt)("inlineCode",{parentName:"h4"},"deps")),(0,l.kt)("p",null,"Dependencies that determine, in addition to unmounting and remounting the React-Component,\nwhen the specified Agile Sub Instances should be re-subscribed to the React-Component."),(0,l.kt)("p",null,"Related to ",(0,l.kt)("a",{parentName:"p",href:"https://github.com/agile-ts/agile/issues/170"},"github issue"),"."),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},"Type"),(0,l.kt)("th",{parentName:"tr",align:null},"Default"),(0,l.kt)("th",{parentName:"tr",align:null},"Required"))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("inlineCode",{parentName:"td"},"any[]")),(0,l.kt)("td",{parentName:"tr",align:null},"[]"),(0,l.kt)("td",{parentName:"tr",align:null},"No")))))}c.isMDXComponent=!0}}]);